{"ast":null,"code":"import \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    addfile(event) {\n      this.file = event.target.files[0];\n      let fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(this.file);\n      fileReader.onload = e => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for (var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join('');\n        var workbook = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n        //console.log(XLSX.utils.sheet_to_json(worksheet, { raw: true }));\n        this.excel_data = XLSX.utils.sheet_to_json(worksheet, {\n          raw: true\n        });\n        console.log(this.excel_data);\n        var arraylist = XLSX.utils.sheet_to_json(worksheet, {\n          raw: true\n        });\n        this.filelist = [];\n        console.log(this.filelist);\n        this.mrns = [];\n        for (var i = 0; i < this.excel_data.length; i++) this.mrns.push(Object.values(this.excel_data[i]));\n        console.log(this.mrns);\n        this.mrns = this.mrns.reduce((previousValue, currentValue) => previousValue.concat(currentValue), []);\n        this.test_patient = this.mrns[3];\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAaC,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,KAAKC,IAAG,MAAO,MAAM;AAC7B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,CAACC,KAAK,EAAE;MACb,IAAI,CAACC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACjC,IAAIC,UAAS,GAAI,IAAIC,UAAU,EAAE;MACjCD,UAAU,CAACE,iBAAiB,CAAC,IAAI,CAACL,IAAI,CAAC;MACvCG,UAAU,CAACG,MAAK,GAAKC,CAAC,IAAK;QACzB,IAAI,CAACC,WAAU,GAAIL,UAAU,CAACM,MAAM;QACpC,IAAIC,IAAG,GAAI,IAAIC,UAAU,CAAC,IAAI,CAACH,WAAW,CAAC;QAC3C,IAAII,GAAE,GAAI,IAAIC,KAAK,EAAE;QACrB,KAAK,IAAIC,IAAI,CAAC,EAAEA,KAAKJ,IAAI,CAACK,MAAM,EAAE,EAAED,CAAC,EACnCF,GAAG,CAACE,CAAC,IAAIlB,MAAM,CAACoB,YAAY,CAACN,IAAI,CAACI,CAAC,CAAC,CAAC;QACvC,IAAIG,IAAG,GAAIL,GAAG,CAACM,IAAI,CAAC,EAAE,CAAC;QACvB,IAAIC,QAAO,GAAI3B,IAAI,CAAC4B,IAAI,CAACH,IAAI,EAAE;UAAEI,IAAI,EAAE;QAAS,CAAC,CAAC;QAClD,IAAIC,gBAAe,GAAIH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QAC7C,IAAIC,SAAQ,GAAIL,QAAQ,CAACM,MAAM,CAACH,gBAAgB,CAAC;QACjD;QACA,IAAI,CAACI,UAAS,GAAIlC,IAAI,CAACmC,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;UAAEK,GAAG,EAAE;QAAK,CAAC,CAAC;QACpEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,UAAU,CAAC;QAC5B,IAAIM,SAAQ,GAAIxC,IAAI,CAACmC,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;UAAEK,GAAG,EAAE;QAAK,CAAC,CAAC;QAClE,IAAI,CAACI,QAAO,GAAI,EAAE;QAClBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,QAAQ,CAAC;QAC1B,IAAI,CAACC,IAAG,GAAI,EAAE;QACd,KAAK,IAAIpB,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACY,UAAU,CAACX,MAAM,EAAED,CAAC,EAAE,EAC7C,IAAI,CAACoB,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACX,UAAU,CAACZ,CAAC,CAAC,CAAC,CAAC;QACnDgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,IAAI,CAAC;QACtB,IAAI,CAACA,IAAG,GAAI,IAAI,CAACA,IAAI,CAACI,MAAM,CAC1B,CAACC,aAAa,EAAEC,YAAY,KAAKD,aAAa,CAACE,MAAM,CAACD,YAAY,CAAC,EACnE,EAAC,CACF;QACD,IAAI,CAACE,YAAW,GAAI,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC;IACH;EACF;AACF","names":["axios","XLSX","name","props","msg","String","methods","addfile","event","file","target","files","fileReader","FileReader","readAsArrayBuffer","onload","e","arrayBuffer","result","data","Uint8Array","arr","Array","i","length","fromCharCode","bstr","join","workbook","read","type","first_sheet_name","SheetNames","worksheet","Sheets","excel_data","utils","sheet_to_json","raw","console","log","arraylist","filelist","mrns","push","Object","values","reduce","previousValue","currentValue","concat","test_patient"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <p>\n      For a guide and recipes on how to configure / customize this project,<br>\n      check out the\n      <a href=\"https://cli.vuejs.org\" target=\"_blank\" rel=\"noopener\">vue-cli documentation</a>.\n    </p>\n    <h3>Installed CLI Plugins</h3>\n  </div>\n</template>\n\n<script>\n\timport axios from 'axios';\n\timport * as XLSX from 'xlsx';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    addfile(event) {\n      this.file = event.target.files[0];\n      let fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(this.file);\n      fileReader.onload = (e) => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for (var i = 0; i != data.length; ++i)\n          arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join('');\n        var workbook = XLSX.read(bstr, { type: 'binary' });\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n        //console.log(XLSX.utils.sheet_to_json(worksheet, { raw: true }));\n        this.excel_data = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        console.log(this.excel_data);\n        var arraylist = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        this.filelist = [];\n        console.log(this.filelist);\n        this.mrns = [];\n        for (var i = 0; i < this.excel_data.length; i++)\n          this.mrns.push(Object.values(this.excel_data[i]));\n        console.log(this.mrns);\n        this.mrns = this.mrns.reduce(\n          (previousValue, currentValue) => previousValue.concat(currentValue),\n          []\n        );\n        this.test_patient = this.mrns[3];\n      };\n    },\n  },\n}\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}