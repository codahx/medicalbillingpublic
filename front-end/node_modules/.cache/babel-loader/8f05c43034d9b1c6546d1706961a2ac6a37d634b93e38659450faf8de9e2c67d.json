{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport setCssVar from './utils/set-css-var.js';\nimport { noop } from './utils/event.js';\nimport { onKeyDownComposition } from './utils/private/key-composition.js';\nimport { isRuntimeSsrPreHydration, client, iosCorrection } from './plugins/Platform.js';\nfunction getMobilePlatform(is) {\n  if (is.ios === true) return 'ios';\n  if (is.android === true) return 'android';\n}\nfunction getBodyClasses({\n  is,\n  has,\n  within\n}, cfg) {\n  const cls = [is.desktop === true ? 'desktop' : 'mobile', `${has.touch === false ? 'no-' : ''}touch`];\n  if (is.mobile === true) {\n    const mobile = getMobilePlatform(is);\n    mobile !== void 0 && cls.push('platform-' + mobile);\n  }\n  if (is.nativeMobile === true) {\n    const type = is.nativeMobileWrapper;\n    cls.push(type);\n    cls.push('native-mobile');\n    if (is.ios === true && (cfg[type] === void 0 || cfg[type].iosStatusBarPadding !== false)) {\n      cls.push('q-ios-padding');\n    }\n  } else if (is.electron === true) {\n    cls.push('electron');\n  } else if (is.bex === true) {\n    cls.push('bex');\n  }\n  within.iframe === true && cls.push('within-iframe');\n  return cls;\n}\nfunction applyClientSsrCorrections() {\n  const classes = document.body.className;\n  let newCls = classes;\n  if (iosCorrection !== void 0) {\n    newCls = newCls.replace('desktop', 'platform-ios mobile');\n  }\n  if (client.has.touch === true) {\n    newCls = newCls.replace('no-touch', 'touch');\n  }\n  if (client.within.iframe === true) {\n    newCls += ' within-iframe';\n  }\n  if (classes !== newCls) {\n    document.body.className = newCls;\n  }\n}\nfunction setColors(brand) {\n  for (const color in brand) {\n    setCssVar(color, brand[color]);\n  }\n}\nexport default {\n  install(opts) {\n    if (__QUASAR_SSR_SERVER__) {\n      const {\n        $q,\n        ssrContext\n      } = opts;\n      const cls = getBodyClasses($q.platform, $q.config);\n      if ($q.config.screen !== void 0 && $q.config.screen.bodyClass === true) {\n        cls.push('screen--xs');\n      }\n      ssrContext._meta.bodyClasses += cls.join(' ');\n      const brand = $q.config.brand;\n      if (brand !== void 0) {\n        const vars = Object.keys(brand).map(key => `--q-${key}:${brand[key]};`).join('');\n        ssrContext._meta.endingHeadTags += `<style>:root{${vars}}</style>`;\n      }\n      return;\n    }\n    if (this.__installed === true) {\n      return;\n    }\n    if (isRuntimeSsrPreHydration.value === true) {\n      applyClientSsrCorrections();\n    } else {\n      const {\n        $q\n      } = opts;\n      $q.config.brand !== void 0 && setColors($q.config.brand);\n      const cls = getBodyClasses(client, $q.config);\n      document.body.classList.add.apply(document.body.classList, cls);\n    }\n    if (client.is.ios === true) {\n      // needed for iOS button active state\n      document.body.addEventListener('touchstart', noop);\n    }\n    window.addEventListener('keydown', onKeyDownComposition, true);\n  }\n};","map":{"version":3,"names":["setCssVar","noop","onKeyDownComposition","isRuntimeSsrPreHydration","client","iosCorrection","getMobilePlatform","is","ios","android","getBodyClasses","has","within","cfg","cls","desktop","touch","mobile","push","nativeMobile","type","nativeMobileWrapper","iosStatusBarPadding","electron","bex","iframe","applyClientSsrCorrections","classes","document","body","className","newCls","replace","setColors","brand","color","install","opts","__QUASAR_SSR_SERVER__","$q","ssrContext","platform","config","screen","bodyClass","_meta","bodyClasses","join","vars","Object","keys","map","key","endingHeadTags","__installed","value","classList","add","apply","addEventListener","window"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/body.js"],"sourcesContent":["import setCssVar from './utils/set-css-var.js'\nimport { noop } from './utils/event.js'\nimport { onKeyDownComposition } from './utils/private/key-composition.js'\nimport { isRuntimeSsrPreHydration, client, iosCorrection } from './plugins/Platform.js'\n\nfunction getMobilePlatform (is) {\n  if (is.ios === true) return 'ios'\n  if (is.android === true) return 'android'\n}\n\nfunction getBodyClasses ({ is, has, within }, cfg) {\n  const cls = [\n    is.desktop === true ? 'desktop' : 'mobile',\n    `${ has.touch === false ? 'no-' : '' }touch`\n  ]\n\n  if (is.mobile === true) {\n    const mobile = getMobilePlatform(is)\n    mobile !== void 0 && cls.push('platform-' + mobile)\n  }\n\n  if (is.nativeMobile === true) {\n    const type = is.nativeMobileWrapper\n\n    cls.push(type)\n    cls.push('native-mobile')\n\n    if (\n      is.ios === true\n      && (cfg[ type ] === void 0 || cfg[ type ].iosStatusBarPadding !== false)\n    ) {\n      cls.push('q-ios-padding')\n    }\n  }\n  else if (is.electron === true) {\n    cls.push('electron')\n  }\n  else if (is.bex === true) {\n    cls.push('bex')\n  }\n\n  within.iframe === true && cls.push('within-iframe')\n\n  return cls\n}\n\nfunction applyClientSsrCorrections () {\n  const classes = document.body.className\n  let newCls = classes\n\n  if (iosCorrection !== void 0) {\n    newCls = newCls.replace('desktop', 'platform-ios mobile')\n  }\n\n  if (client.has.touch === true) {\n    newCls = newCls.replace('no-touch', 'touch')\n  }\n\n  if (client.within.iframe === true) {\n    newCls += ' within-iframe'\n  }\n\n  if (classes !== newCls) {\n    document.body.className = newCls\n  }\n}\n\nfunction setColors (brand) {\n  for (const color in brand) {\n    setCssVar(color, brand[ color ])\n  }\n}\n\nexport default {\n  install (opts) {\n    if (__QUASAR_SSR_SERVER__) {\n      const { $q, ssrContext } = opts\n      const cls = getBodyClasses($q.platform, $q.config)\n\n      if ($q.config.screen !== void 0 && $q.config.screen.bodyClass === true) {\n        cls.push('screen--xs')\n      }\n\n      ssrContext._meta.bodyClasses += cls.join(' ')\n\n      const brand = $q.config.brand\n      if (brand !== void 0) {\n        const vars = Object.keys(brand)\n          .map(key => `--q-${ key }:${ brand[ key ] };`)\n          .join('')\n\n        ssrContext._meta.endingHeadTags += `<style>:root{${ vars }}</style>`\n      }\n\n      return\n    }\n\n    if (this.__installed === true) { return }\n\n    if (isRuntimeSsrPreHydration.value === true) {\n      applyClientSsrCorrections()\n    }\n    else {\n      const { $q } = opts\n\n      $q.config.brand !== void 0 && setColors($q.config.brand)\n\n      const cls = getBodyClasses(client, $q.config)\n      document.body.classList.add.apply(document.body.classList, cls)\n    }\n\n    if (client.is.ios === true) {\n      // needed for iOS button active state\n      document.body.addEventListener('touchstart', noop)\n    }\n\n    window.addEventListener('keydown', onKeyDownComposition, true)\n  }\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,oBAAoB,QAAQ,oCAAoC;AACzE,SAASC,wBAAwB,EAAEC,MAAM,EAAEC,aAAa,QAAQ,uBAAuB;AAEvF,SAASC,iBAAiB,CAAEC,EAAE,EAAE;EAC9B,IAAIA,EAAE,CAACC,GAAG,KAAK,IAAI,EAAE,OAAO,KAAK;EACjC,IAAID,EAAE,CAACE,OAAO,KAAK,IAAI,EAAE,OAAO,SAAS;AAC3C;AAEA,SAASC,cAAc,CAAE;EAAEH,EAAE;EAAEI,GAAG;EAAEC;AAAO,CAAC,EAAEC,GAAG,EAAE;EACjD,MAAMC,GAAG,GAAG,CACVP,EAAE,CAACQ,OAAO,KAAK,IAAI,GAAG,SAAS,GAAG,QAAQ,EACzC,GAAGJ,GAAG,CAACK,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,EAAI,OAAM,CAC7C;EAED,IAAIT,EAAE,CAACU,MAAM,KAAK,IAAI,EAAE;IACtB,MAAMA,MAAM,GAAGX,iBAAiB,CAACC,EAAE,CAAC;IACpCU,MAAM,KAAK,KAAK,CAAC,IAAIH,GAAG,CAACI,IAAI,CAAC,WAAW,GAAGD,MAAM,CAAC;EACrD;EAEA,IAAIV,EAAE,CAACY,YAAY,KAAK,IAAI,EAAE;IAC5B,MAAMC,IAAI,GAAGb,EAAE,CAACc,mBAAmB;IAEnCP,GAAG,CAACI,IAAI,CAACE,IAAI,CAAC;IACdN,GAAG,CAACI,IAAI,CAAC,eAAe,CAAC;IAEzB,IACEX,EAAE,CAACC,GAAG,KAAK,IAAI,KACXK,GAAG,CAAEO,IAAI,CAAE,KAAK,KAAK,CAAC,IAAIP,GAAG,CAAEO,IAAI,CAAE,CAACE,mBAAmB,KAAK,KAAK,CAAC,EACxE;MACAR,GAAG,CAACI,IAAI,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC,MACI,IAAIX,EAAE,CAACgB,QAAQ,KAAK,IAAI,EAAE;IAC7BT,GAAG,CAACI,IAAI,CAAC,UAAU,CAAC;EACtB,CAAC,MACI,IAAIX,EAAE,CAACiB,GAAG,KAAK,IAAI,EAAE;IACxBV,GAAG,CAACI,IAAI,CAAC,KAAK,CAAC;EACjB;EAEAN,MAAM,CAACa,MAAM,KAAK,IAAI,IAAIX,GAAG,CAACI,IAAI,CAAC,eAAe,CAAC;EAEnD,OAAOJ,GAAG;AACZ;AAEA,SAASY,yBAAyB,GAAI;EACpC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS;EACvC,IAAIC,MAAM,GAAGJ,OAAO;EAEpB,IAAItB,aAAa,KAAK,KAAK,CAAC,EAAE;IAC5B0B,MAAM,GAAGA,MAAM,CAACC,OAAO,CAAC,SAAS,EAAE,qBAAqB,CAAC;EAC3D;EAEA,IAAI5B,MAAM,CAACO,GAAG,CAACK,KAAK,KAAK,IAAI,EAAE;IAC7Be,MAAM,GAAGA,MAAM,CAACC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;EAC9C;EAEA,IAAI5B,MAAM,CAACQ,MAAM,CAACa,MAAM,KAAK,IAAI,EAAE;IACjCM,MAAM,IAAI,gBAAgB;EAC5B;EAEA,IAAIJ,OAAO,KAAKI,MAAM,EAAE;IACtBH,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGC,MAAM;EAClC;AACF;AAEA,SAASE,SAAS,CAAEC,KAAK,EAAE;EACzB,KAAK,MAAMC,KAAK,IAAID,KAAK,EAAE;IACzBlC,SAAS,CAACmC,KAAK,EAAED,KAAK,CAAEC,KAAK,CAAE,CAAC;EAClC;AACF;AAEA,eAAe;EACbC,OAAO,CAAEC,IAAI,EAAE;IACb,IAAIC,qBAAqB,EAAE;MACzB,MAAM;QAAEC,EAAE;QAAEC;MAAW,CAAC,GAAGH,IAAI;MAC/B,MAAMvB,GAAG,GAAGJ,cAAc,CAAC6B,EAAE,CAACE,QAAQ,EAAEF,EAAE,CAACG,MAAM,CAAC;MAElD,IAAIH,EAAE,CAACG,MAAM,CAACC,MAAM,KAAK,KAAK,CAAC,IAAIJ,EAAE,CAACG,MAAM,CAACC,MAAM,CAACC,SAAS,KAAK,IAAI,EAAE;QACtE9B,GAAG,CAACI,IAAI,CAAC,YAAY,CAAC;MACxB;MAEAsB,UAAU,CAACK,KAAK,CAACC,WAAW,IAAIhC,GAAG,CAACiC,IAAI,CAAC,GAAG,CAAC;MAE7C,MAAMb,KAAK,GAAGK,EAAE,CAACG,MAAM,CAACR,KAAK;MAC7B,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;QACpB,MAAMc,IAAI,GAAGC,MAAM,CAACC,IAAI,CAAChB,KAAK,CAAC,CAC5BiB,GAAG,CAACC,GAAG,IAAK,OAAOA,GAAK,IAAIlB,KAAK,CAAEkB,GAAG,CAAI,GAAE,CAAC,CAC7CL,IAAI,CAAC,EAAE,CAAC;QAEXP,UAAU,CAACK,KAAK,CAACQ,cAAc,IAAK,gBAAgBL,IAAM,WAAU;MACtE;MAEA;IACF;IAEA,IAAI,IAAI,CAACM,WAAW,KAAK,IAAI,EAAE;MAAE;IAAO;IAExC,IAAInD,wBAAwB,CAACoD,KAAK,KAAK,IAAI,EAAE;MAC3C7B,yBAAyB,EAAE;IAC7B,CAAC,MACI;MACH,MAAM;QAAEa;MAAG,CAAC,GAAGF,IAAI;MAEnBE,EAAE,CAACG,MAAM,CAACR,KAAK,KAAK,KAAK,CAAC,IAAID,SAAS,CAACM,EAAE,CAACG,MAAM,CAACR,KAAK,CAAC;MAExD,MAAMpB,GAAG,GAAGJ,cAAc,CAACN,MAAM,EAAEmC,EAAE,CAACG,MAAM,CAAC;MAC7Cd,QAAQ,CAACC,IAAI,CAAC2B,SAAS,CAACC,GAAG,CAACC,KAAK,CAAC9B,QAAQ,CAACC,IAAI,CAAC2B,SAAS,EAAE1C,GAAG,CAAC;IACjE;IAEA,IAAIV,MAAM,CAACG,EAAE,CAACC,GAAG,KAAK,IAAI,EAAE;MAC1B;MACAoB,QAAQ,CAACC,IAAI,CAAC8B,gBAAgB,CAAC,YAAY,EAAE1D,IAAI,CAAC;IACpD;IAEA2D,MAAM,CAACD,gBAAgB,CAAC,SAAS,EAAEzD,oBAAoB,EAAE,IAAI,CAAC;EAChE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}