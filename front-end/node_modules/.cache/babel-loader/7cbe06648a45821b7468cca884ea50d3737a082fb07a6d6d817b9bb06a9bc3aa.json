{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-3xl text-center my-8\"\n}, \"User Account\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 1,\n  class: \"mb-4\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"bg-gray-200 w-32 h-32 rounded-full mx-auto\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 3,\n  class: \"text-center text-red-500\"\n};\nconst _hoisted_6 = {\n  key: 4,\n  class: \"text-center text-red-500\"\n};\nconst _hoisted_7 = {\n  key: 5,\n  class: \"text-center text-red-500\"\n};\nconst _hoisted_8 = {\n  key: 6,\n  class: \"text-center text-red-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loader = _resolveComponent(\"Loader\");\n  const _component_UserForm = _resolveComponent(\"UserForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _ctx.loading ? (_openBlock(), _createBlock(_component_Loader, {\n    key: 0,\n    height: 256,\n    class: \"animate-spin stroke-current text-blue-500 mx-auto\"\n  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [!_ctx.imageSrc ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3)) : (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: _ctx.imageSrc,\n    class: \"w-32 h-32 rounded-full mx-auto\",\n    alt: \"User profile image\"\n  }, null, 8 /* PROPS */, _hoisted_4)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-red w-32 block mx-auto my-2\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.deleteImage && _ctx.deleteImage(...args))\n  }, \" Delete \"), _ctx.user ? (_openBlock(), _createBlock(_component_UserForm, {\n    key: 2,\n    user: _ctx.user,\n    onImageSubmitted: _ctx.handleImageSubmitted,\n    onDetailsSubmitted: _ctx.handleDetailsSubmitted\n  }, null, 8 /* PROPS */, [\"user\", \"onImageSubmitted\", \"onDetailsSubmitted\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-red w-32 block mx-auto my-2\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.signout && _ctx.signout(...args))\n  }, \" Signout \"), _ctx.meError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Error fetching user\")) : _createCommentVNode(\"v-if\", true), _ctx.postImageError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" Failed to update image \")) : _createCommentVNode(\"v-if\", true), _ctx.deleteImageError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" Failed to delete image \")) : _createCommentVNode(\"v-if\", true), _ctx.updateDetailsError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Failed to update user details \")) : _createCommentVNode(\"v-if\", true)]))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAuD;EAAnDC,KAAK,EAAC;AAA2B,GAAC,cAAY;;;EAMtCA,KAAK,EAAC;;;;EAGdA,KAAK,EAAC;;;;;EA4BUA,KAAK,EAAC;;;;EACCA,KAAK,EAAC;;;;EAGJA,KAAK,EAAC;;;;EAGJA,KAAK,EAAC;;;;;6DA5CrCC,UAAuD,EAE/CC,YAAO,kBADfC,aAIEC;;IAFCC,MAAM,EAAE,GAAG;IACZL,KAAK,EAAC;uBAERM,oBAyCM,OAzCNC,UAyCM,IAvCKL,aAAQ,kBADjBI,oBAGO,OAHPE,UAGO,oBACPF,oBAKE;;IAHCG,GAAG,EAAEP,aAAQ;IACdF,KAAK,EAAC,gCAAgC;IACtCU,GAAG,EAAC;wCAENX,oBAMS;IALPY,IAAI,EAAC,QAAQ;IACbX,KAAK,EAAC,qCAAqC;IAC1CY,OAAK,yCAAEV,6CAAW;KACpB,UAED,GAEQA,SAAI,kBADZC,aAKEU;;IAHCC,IAAI,EAAEZ,SAAI;IACVa,gBAAc,EAAEb,yBAAoB;IACpCc,kBAAgB,EAAEd;oHAErBH,oBAMS;IALPY,IAAI,EAAC,QAAQ;IACbX,KAAK,EAAC,qCAAqC;IAC1CY,OAAK,yCAAEV,qCAAO;KAChB,WAED,GACSA,YAAO,kBAAhBI,oBAA0E,KAA1EW,UAA0E,EAAvB,qBAAmB,wCAC7Df,mBAAc,kBAAvBI,oBAEI,KAFJY,UAEI,EAFsD,0BAE1D,wCACShB,qBAAgB,kBAAzBI,oBAEI,KAFJa,UAEI,EAFwD,0BAE5D,wCACSjB,uBAAkB,kBAA3BI,oBAEI,KAFJc,UAEI,EAF0D,iCAE9D","names":["_createElementVNode","class","_hoisted_1","_ctx","_createBlock","_component_Loader","height","_createElementBlock","_hoisted_2","_hoisted_3","src","alt","type","onClick","_component_UserForm","user","onImageSubmitted","onDetailsSubmitted","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\views\\Details.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"text-3xl text-center my-8\">User Account</h1>\r\n    <Loader\r\n      v-if=\"loading\"\r\n      :height=\"256\"\r\n      class=\"animate-spin stroke-current text-blue-500 mx-auto\"\r\n    />\r\n    <div v-else class=\"mb-4\">\r\n      <div\r\n        v-if=\"!imageSrc\"\r\n        class=\"bg-gray-200 w-32 h-32 rounded-full mx-auto\"\r\n      ></div>\r\n      <img\r\n        v-else\r\n        :src=\"imageSrc\"\r\n        class=\"w-32 h-32 rounded-full mx-auto\"\r\n        alt=\"User profile image\"\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-red w-32 block mx-auto my-2\"\r\n        @click=\"deleteImage\"\r\n      >\r\n        Delete\r\n      </button>\r\n      <UserForm\r\n        v-if=\"user\"\r\n        :user=\"user\"\r\n        @imageSubmitted=\"handleImageSubmitted\"\r\n        @detailsSubmitted=\"handleDetailsSubmitted\"\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-red w-32 block mx-auto my-2\"\r\n        @click=\"signout\"\r\n      >\r\n        Signout\r\n      </button>\r\n      <p v-if=\"meError\" class=\"text-center text-red-500\">Error fetching user</p>\r\n      <p v-if=\"postImageError\" class=\"text-center text-red-500\">\r\n        Failed to update image\r\n      </p>\r\n      <p v-if=\"deleteImageError\" class=\"text-center text-red-500\">\r\n        Failed to delete image\r\n      </p>\r\n      <p v-if=\"updateDetailsError\" class=\"text-center text-red-500\">\r\n        Failed to update user details\r\n      </p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent, computed, ref, watch } from 'vue';\r\n  import { useAuth } from '../store/auth';\r\n  import { useRequest } from '../util';\r\n  import UserForm from '../components/UserForm.vue';\r\n  import Loader from '../components/ui/Loader.vue';\r\n  export default defineComponent({\r\n    name: 'Details',\r\n    components: {\r\n      UserForm,\r\n      Loader,\r\n    },\r\n    setup() {\r\n      const { idToken, signout } = useAuth();\r\n      const imageSrc = ref(null);\r\n      const { data: meData, error: meError, loading: meLoading } = useRequest(\r\n        {\r\n          url: '/api/account/me',\r\n          method: 'get',\r\n          headers: {\r\n            Authorization: `Bearer ${idToken.value}`,\r\n          },\r\n        },\r\n        {\r\n          execOnMounted: true,\r\n        }\r\n      );\r\n      const {\r\n        exec: postImage,\r\n        data: postImageData,\r\n        error: postImageError,\r\n        loading: postImageLoading,\r\n      } = useRequest({\r\n        url: '/api/account/image',\r\n        method: 'post',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      const {\r\n        exec: deleteImage,\r\n        data: deleteImageData,\r\n        error: deleteImageError,\r\n        loading: deleteImageLoading,\r\n      } = useRequest({\r\n        url: '/api/account/image',\r\n        method: 'delete',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n        },\r\n      });\r\n      const {\r\n        exec: updateDetails,\r\n        data: updateDetailsData,\r\n        error: updateDetailsError,\r\n        loading: updateDetailsLoading,\r\n      } = useRequest({\r\n        url: '/api/account/details',\r\n        method: 'put',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n        },\r\n      });\r\n      const handleDetailsSubmitted = (userDetails) => {\r\n        updateDetails(userDetails);\r\n      };\r\n      const handleImageSubmitted = async (imageBlob) => {\r\n        const formData = new FormData();\r\n        formData.append('imageFile', imageBlob);\r\n        postImage(formData);\r\n      };\r\n      watch(meData, (newData) => {\r\n        if (!newData) return;\r\n        if (!newData?.user?.imageUrl.length) {\r\n          // empty imageUrl comes as empty string from API\r\n          imageSrc.value = null;\r\n        } else {\r\n          imageSrc.value = newData.user.imageUrl + `?_${Date.now()}`;\r\n        }\r\n      });\r\n      watch(postImageData, (newData) => {\r\n        if (!newData) return;\r\n        imageSrc.value = newData?.imageUrl + `?_${Date.now()}`;\r\n      });\r\n      watch(deleteImageData, (newData) => {\r\n        if (!newData) return;\r\n        if (newData.message === 'success') {\r\n          imageSrc.value = null;\r\n        }\r\n      });\r\n      const loading = computed(() => {\r\n        return (\r\n          meLoading.value ||\r\n          postImageLoading.value ||\r\n          deleteImageLoading.value ||\r\n          updateDetailsLoading.value\r\n        );\r\n      });\r\n      const user = computed(() => {\r\n        return updateDetailsData?.value?.user || meData?.value?.user;\r\n      });\r\n      return {\r\n        meData,\r\n        meError,\r\n        postImage,\r\n        postImageData,\r\n        postImageError,\r\n        handleImageSubmitted,\r\n        loading,\r\n        imageSrc,\r\n        deleteImage,\r\n        deleteImageError,\r\n        handleDetailsSubmitted,\r\n        updateDetailsError,\r\n        user,\r\n        signout,\r\n      };\r\n    },\r\n  });\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}