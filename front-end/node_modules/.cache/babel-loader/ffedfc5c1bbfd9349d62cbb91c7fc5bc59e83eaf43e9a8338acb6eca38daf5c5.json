{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"px-4\"\n};\nconst _hoisted_2 = {\n  class: \"text-xl text-center font-semibold mb-2\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"flex justify-center mt-4\"\n};\nconst _hoisted_7 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loader = _resolveComponent(\"Loader\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString(_ctx.isLogin ? 'Login' : 'Sign Up'), 1 /* TEXT */), _createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Email Address\",\n    onInput: _cache[0] || (_cache[0] = (...args) => _ctx.emailField.handleChange && _ctx.emailField.handleChange(...args)),\n    onBlur: _cache[1] || (_cache[1] = (...args) => _ctx.emailField.handleBlur && _ctx.emailField.handleBlur(...args)),\n    value: _ctx.emailField.value,\n    class: \"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3), _createElementVNode(\"p\", {\n    class: \"text-center text-red-500\",\n    style: _normalizeStyle({\n      visibility: _ctx.emailField.meta.touched && !_ctx.emailField.meta.valid ? 'visible' : 'hidden'\n    })\n  }, _toDisplayString(_ctx.emailField.errorMessage || 'Field is Required'), 5 /* TEXT, STYLE */), _createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    onInput: _cache[2] || (_cache[2] = $event => (_ctx.passwordField.handleChange($event), _ctx.confirmPasswordField.validate())),\n    onBlur: _cache[3] || (_cache[3] = (...args) => _ctx.passwordField.handleBlur && _ctx.passwordField.handleBlur(...args)),\n    value: _ctx.passwordField.value,\n    class: \"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4), _createElementVNode(\"p\", {\n    class: \"text-center text-red-500\",\n    style: _normalizeStyle({\n      visibility: _ctx.passwordField.meta.touched && !_ctx.passwordField.meta.valid ? 'visible' : 'hidden'\n    })\n  }, _toDisplayString(_ctx.passwordField.errorMessage || 'Field is Required'), 5 /* TEXT, STYLE */), !_ctx.isLogin ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    onInput: _cache[4] || (_cache[4] = (...args) => _ctx.confirmPasswordField.handleChange && _ctx.confirmPasswordField.handleChange(...args)),\n    onBlur: _cache[5] || (_cache[5] = (...args) => _ctx.confirmPasswordField.handleBlur && _ctx.confirmPasswordField.handleBlur(...args)),\n    value: _ctx.confirmPasswordField.value,\n    class: \"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      visibility: _ctx.confirmPasswordField.meta.touched && !_ctx.confirmPasswordField.meta.valid ? 'visible' : 'hidden'\n    }),\n    class: \"text-center text-red-500\"\n  }, _toDisplayString(_ctx.confirmPasswordField.errorMessage || 'Field is Required'), 5 /* TEXT, STYLE */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"btn btn-blue mx-1 flex items-center\",\n    disabled: !_ctx.formMeta.valid,\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.submitForm && _ctx.submitForm(...args))\n  }, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.isLogin ? 'Login' : 'Sign Up'), 1 /* TEXT */), _ctx.isSubmitting ? (_openBlock(), _createBlock(_component_Loader, {\n    key: 0,\n    class: \"animate-spin stroke-current text-white ml-2\",\n    height: 16\n  })) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_7)])]);\n}","map":{"version":3,"mappings":";;EACMA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAwC;;;;;EA6D7CA,KAAK,EAAC;AAA0B;;;;uBA9DtCC,oBA0EM,OA1ENC,UA0EM,GAzELC,oBAEK,MAFLC,UAEK,mBADDC,YAAO,wCAEXF,oBAMkI;IALjIG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,eAAe;IAC1BC,OAAK,yCAAEH,eAAU,CAACI,YAAY,IAAvBJ,eAAU,CAACI,YAAY;IAC9BC,MAAI,yCAAEL,eAAU,CAACM,UAAU,IAArBN,eAAU,CAACM,UAAU;IAC3BC,KAAK,EAAEP,eAAU,CAACO,KAAK;IACxBZ,KAAK,EAAC;wDACPG,oBASI;IARHH,KAAK,EAAC,0BAA0B;IAC/Ba,KAAK;kBAA2BR,eAAU,CAACS,IAAI,CAACC,OAAO,KAAKV,eAAU,CAACS,IAAI,CAACE,KAAK;;sBAM/EX,eAAU,CAACY,YAAY,gDAE3Bd,oBAQkI;IAPjIG,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,UAAU;IACrBC,OAAK,uCAAQH,kBAAa,CAACI,YAAY,CAACS,MAAM,GAAGb,yBAAoB,CAACc,QAAQ;IAG9ET,MAAI,yCAAEL,kBAAa,CAACM,UAAU,IAAxBN,kBAAa,CAACM,UAAU;IAC9BC,KAAK,EAAEP,kBAAa,CAACO,KAAK;IAC3BZ,KAAK,EAAC;wDACPG,oBASI;IARHH,KAAK,EAAC,0BAA0B;IAC/Ba,KAAK;kBAA2BR,kBAAa,CAACS,IAAI,CAACC,OAAO,KAAKV,kBAAa,CAACS,IAAI,CAACE,KAAK;;sBAMrFX,kBAAa,CAACY,YAAY,iDAGbZ,YAAO,kBAAxBJ,oBAmBWmB;IAAAC;EAAA,IAlBVlB,oBAMkI;IALjIG,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,kBAAkB;IAC7BC,OAAK,yCAAEH,yBAAoB,CAACI,YAAY,IAAjCJ,yBAAoB,CAACI,YAAY;IACxCC,MAAI,yCAAEL,yBAAoB,CAACM,UAAU,IAA/BN,yBAAoB,CAACM,UAAU;IACrCC,KAAK,EAAEP,yBAAoB,CAACO,KAAK;IAClCZ,KAAK,EAAC;wDACPG,oBAUI;IATFU,KAAK;kBAA6BR,yBAAoB,CAACS,IAAI,CAACC,OAAO,KAAYV,yBAAoB,CAACS,IAAI,CAACE,KAAK;;IAO/GhB,KAAK,EAAC;sBACHK,yBAAoB,CAACY,YAAY,iHAItCd,oBAWM,OAXNmB,UAWM,GAVLnB,oBASS;IARRH,KAAK,EAAC,qCAAqC;IAC1CuB,QAAQ,GAAGlB,aAAQ,CAACW,KAAK;IACzBQ,OAAK,yCAAEnB,2CAAU;MAClBF,oBAAgD,+BAAvCE,YAAO,wCAETA,iBAAY,kBADnBoB,aAGgBC;;IADf1B,KAAK,EAAC,6CAA6C;IAClD2B,MAAM,EAAE","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","type","placeholder","onInput","handleChange","onBlur","handleBlur","value","style","meta","touched","valid","errorMessage","$event","validate","_Fragment","key","_hoisted_6","disabled","onClick","_createBlock","_component_Loader","height"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n\t<div class=\"px-4\">\r\n\t\t<h1 class=\"text-xl text-center font-semibold mb-2\">\r\n\t\t\t{{ isLogin ? 'Login' : 'Sign Up' }}\r\n\t\t</h1>\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t@input=\"emailField.handleChange\"\r\n\t\t\t@blur=\"emailField.handleBlur\"\r\n\t\t\t:value=\"emailField.value\"\r\n\t\t\tclass=\"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\" />\r\n\t\t<p\r\n\t\t\tclass=\"text-center text-red-500\"\r\n\t\t\t:style=\"{\r\n\t\t\t\tvisibility:\r\n\t\t\t\t\temailField.meta.touched && !emailField.meta.valid\r\n\t\t\t\t\t\t? 'visible'\r\n\t\t\t\t\t\t: 'hidden',\r\n\t\t\t}\">\r\n\t\t\t{{ emailField.errorMessage || 'Field is Required' }}\r\n\t\t</p>\r\n\t\t<input\r\n\t\t\ttype=\"password\"\r\n\t\t\tplaceholder=\"Password\"\r\n\t\t\t@input=\"\r\n\t\t\t\tpasswordField.handleChange($event), confirmPasswordField.validate()\r\n\t\t\t\"\r\n\t\t\t@blur=\"passwordField.handleBlur\"\r\n\t\t\t:value=\"passwordField.value\"\r\n\t\t\tclass=\"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\" />\r\n\t\t<p\r\n\t\t\tclass=\"text-center text-red-500\"\r\n\t\t\t:style=\"{\r\n\t\t\t\tvisibility:\r\n\t\t\t\t\tpasswordField.meta.touched && !passwordField.meta.valid\r\n\t\t\t\t\t\t? 'visible'\r\n\t\t\t\t\t\t: 'hidden',\r\n\t\t\t}\">\r\n\t\t\t{{ passwordField.errorMessage || 'Field is Required' }}\r\n\t\t</p>\r\n\r\n\t\t<template v-if=\"!isLogin\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t@input=\"confirmPasswordField.handleChange\"\r\n\t\t\t\t@blur=\"confirmPasswordField.handleBlur\"\r\n\t\t\t\t:value=\"confirmPasswordField.value\"\r\n\t\t\t\tclass=\"px-4 my-2 min-w-full mx-auto border border-gray-500 rounded-full focus:outline-none focus:ring-1 focus:border-blue-300\" />\r\n\t\t\t<p\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tvisibility:\r\n\t\t\t\t\t\tconfirmPasswordField.meta.touched &&\r\n\t\t\t\t\t\t!confirmPasswordField.meta.valid\r\n\t\t\t\t\t\t\t? 'visible'\r\n\t\t\t\t\t\t\t: 'hidden',\r\n\t\t\t\t}\"\r\n\t\t\t\tclass=\"text-center text-red-500\">\r\n\t\t\t\t{{ confirmPasswordField.errorMessage || 'Field is Required' }}\r\n\t\t\t</p>\r\n\t\t</template>\r\n\r\n\t\t<div class=\"flex justify-center mt-4\">\r\n\t\t\t<button\r\n\t\t\t\tclass=\"btn btn-blue mx-1 flex items-center\"\r\n\t\t\t\t:disabled=\"!formMeta.valid\"\r\n\t\t\t\t@click=\"submitForm\">\r\n\t\t\t\t<span>{{ isLogin ? 'Login' : 'Sign Up' }}</span>\r\n\t\t\t\t<Loader\r\n\t\t\t\t\tv-if=\"isSubmitting\"\r\n\t\t\t\t\tclass=\"animate-spin stroke-current text-white ml-2\"\r\n\t\t\t\t\t:height=\"16\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { defineComponent, reactive, computed, watch } from 'vue';\r\n\timport { useField, useForm } from 'vee-validate';\r\n\timport Loader from './ui/Loader.vue';\r\n\texport default defineComponent({\r\n\t\tname: 'LoginForm',\r\n\t\tcomponents: {\r\n\t\t\tLoader,\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tisLogin: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true,\r\n\t\t\t},\r\n\t\t\tisSubmitting: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\temits: {\r\n\t\t\tsubmitAuth: null, // null means we will not validate event\r\n\t\t},\r\n\t\tsetup(props, { emit }) {\r\n\t\t\tconst { meta: formMeta, handleSubmit } = useForm();\r\n\t\t\tconst emailField = reactive(useField('email', 'email'));\r\n\t\t\tconst passwordField = reactive(useField('password', 'password'));\r\n\t\t\tconst confirmPasswordValidator = computed(() => {\r\n\t\t\t\treturn !props.isLogin ? 'confirmPassword:password' : () => true;\r\n\t\t\t});\r\n\r\n\t\t\tconst confirmPasswordField = reactive(\r\n\t\t\t\tuseField('confirmPassword', confirmPasswordValidator)\r\n\t\t\t);\r\n\t\t\twatch(\r\n\t\t\t\t() => props.isLogin,\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconfirmPasswordField.validate();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst submitForm = handleSubmit((formValues) => {\r\n\t\t\t\temit('submitAuth', {\r\n\t\t\t\t\temail: formValues.email,\r\n\t\t\t\t\tpassword: formValues.password,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\temailField,\r\n\t\t\t\tpasswordField,\r\n\t\t\t\tconfirmPasswordField,\r\n\t\t\t\tsubmitForm,\r\n\t\t\t\tformMeta,\r\n\t\t\t};\r\n\t\t},\r\n\t});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}