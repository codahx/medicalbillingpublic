{"ast":null,"code":"import { inject, watch, getCurrentInstance, onMounted, onBeforeUnmount } from 'vue';\nimport { formKey } from '../utils/private/symbols.js';\nexport default function ({\n  validate,\n  resetValidation,\n  requiresQForm\n}) {\n  const $form = inject(formKey, false);\n  if ($form !== false) {\n    const {\n      props,\n      proxy\n    } = getCurrentInstance();\n\n    // export public method (so it can be used in QForm)\n    Object.assign(proxy, {\n      validate,\n      resetValidation\n    });\n    watch(() => props.disable, val => {\n      if (val === true) {\n        typeof resetValidation === 'function' && resetValidation();\n        $form.unbindComponent(proxy);\n      } else {\n        $form.bindComponent(proxy);\n      }\n    });\n    onMounted(() => {\n      // register to parent QForm\n      props.disable !== true && $form.bindComponent(proxy);\n    });\n    onBeforeUnmount(() => {\n      // un-register from parent QForm\n      props.disable !== true && $form.unbindComponent(proxy);\n    });\n  } else if (requiresQForm === true) {\n    console.error('Parent QForm not found on useFormChild()!');\n  }\n}","map":{"version":3,"names":["inject","watch","getCurrentInstance","onMounted","onBeforeUnmount","formKey","validate","resetValidation","requiresQForm","$form","props","proxy","Object","assign","disable","val","unbindComponent","bindComponent","console","error"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/composables/use-form-child.js"],"sourcesContent":["import { inject, watch, getCurrentInstance, onMounted, onBeforeUnmount } from 'vue'\r\n\r\nimport { formKey } from '../utils/private/symbols.js'\r\n\r\nexport default function ({ validate, resetValidation, requiresQForm }) {\r\n  const $form = inject(formKey, false)\r\n\r\n  if ($form !== false) {\r\n    const { props, proxy } = getCurrentInstance()\r\n\r\n    // export public method (so it can be used in QForm)\r\n    Object.assign(proxy, { validate, resetValidation })\r\n\r\n    watch(() => props.disable, val => {\r\n      if (val === true) {\r\n        typeof resetValidation === 'function' && resetValidation()\r\n        $form.unbindComponent(proxy)\r\n      }\r\n      else {\r\n        $form.bindComponent(proxy)\r\n      }\r\n    })\r\n\r\n    onMounted(() => {\r\n      // register to parent QForm\r\n      props.disable !== true && $form.bindComponent(proxy)\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      // un-register from parent QForm\r\n      props.disable !== true && $form.unbindComponent(proxy)\r\n    })\r\n  }\r\n  else if (requiresQForm === true) {\r\n    console.error('Parent QForm not found on useFormChild()!')\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,kBAAkB,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAEnF,SAASC,OAAO,QAAQ,6BAA6B;AAErD,eAAe,UAAU;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAc,CAAC,EAAE;EACrE,MAAMC,KAAK,GAAGT,MAAM,CAACK,OAAO,EAAE,KAAK,CAAC;EAEpC,IAAII,KAAK,KAAK,KAAK,EAAE;IACnB,MAAM;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGT,kBAAkB,EAAE;;IAE7C;IACAU,MAAM,CAACC,MAAM,CAACF,KAAK,EAAE;MAAEL,QAAQ;MAAEC;IAAgB,CAAC,CAAC;IAEnDN,KAAK,CAAC,MAAMS,KAAK,CAACI,OAAO,EAAEC,GAAG,IAAI;MAChC,IAAIA,GAAG,KAAK,IAAI,EAAE;QAChB,OAAOR,eAAe,KAAK,UAAU,IAAIA,eAAe,EAAE;QAC1DE,KAAK,CAACO,eAAe,CAACL,KAAK,CAAC;MAC9B,CAAC,MACI;QACHF,KAAK,CAACQ,aAAa,CAACN,KAAK,CAAC;MAC5B;IACF,CAAC,CAAC;IAEFR,SAAS,CAAC,MAAM;MACd;MACAO,KAAK,CAACI,OAAO,KAAK,IAAI,IAAIL,KAAK,CAACQ,aAAa,CAACN,KAAK,CAAC;IACtD,CAAC,CAAC;IAEFP,eAAe,CAAC,MAAM;MACpB;MACAM,KAAK,CAACI,OAAO,KAAK,IAAI,IAAIL,KAAK,CAACO,eAAe,CAACL,KAAK,CAAC;IACxD,CAAC,CAAC;EACJ,CAAC,MACI,IAAIH,aAAa,KAAK,IAAI,EAAE;IAC/BU,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;EAC5D;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}