{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { globalConfig } from './global-config.js';\nconst globalNodes = [];\nlet target = __QUASAR_SSR_SERVER__ ? void 0 : document.body;\nexport function createGlobalNode(id) {\n  const el = document.createElement('div');\n  if (id !== void 0) {\n    el.id = id;\n  }\n  if (globalConfig.globalNodes !== void 0) {\n    const cls = globalConfig.globalNodes.class;\n    if (cls !== void 0) {\n      el.className = cls;\n    }\n  }\n  target.appendChild(el);\n  globalNodes.push(el);\n  return el;\n}\nexport function removeGlobalNode(el) {\n  globalNodes.splice(globalNodes.indexOf(el), 1);\n  el.remove();\n}\nexport function changeGlobalNodesTarget(el) {\n  if (el !== target) {\n    target = el;\n    globalNodes.forEach(el => {\n      if (el.contains(target) === false) {\n        target.appendChild(el);\n      }\n    });\n  }\n}","map":{"version":3,"names":["globalConfig","globalNodes","target","__QUASAR_SSR_SERVER__","document","body","createGlobalNode","id","el","createElement","cls","class","className","appendChild","push","removeGlobalNode","splice","indexOf","remove","changeGlobalNodesTarget","forEach","contains"],"sources":["C:/Users/raamb/Desktop/Medical Billing/front-end/node_modules/quasar/src/utils/private/global-nodes.js"],"sourcesContent":["import { globalConfig } from './global-config.js'\n\nconst globalNodes = []\nlet target = __QUASAR_SSR_SERVER__\n  ? void 0\n  : document.body\n\nexport function createGlobalNode (id) {\n  const el = document.createElement('div')\n\n  if (id !== void 0) {\n    el.id = id\n  }\n\n  if (globalConfig.globalNodes !== void 0) {\n    const cls = globalConfig.globalNodes.class\n    if (cls !== void 0) {\n      el.className = cls\n    }\n  }\n\n  target.appendChild(el)\n  globalNodes.push(el)\n\n  return el\n}\n\nexport function removeGlobalNode (el) {\n  globalNodes.splice(globalNodes.indexOf(el), 1)\n  el.remove()\n}\n\nexport function changeGlobalNodesTarget (el) {\n  if (el !== target) {\n    target = el\n\n    globalNodes.forEach(el => {\n      if (el.contains(target) === false) {\n        target.appendChild(el)\n      }\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,WAAW,GAAG,EAAE;AACtB,IAAIC,MAAM,GAAGC,qBAAqB,GAC9B,KAAK,CAAC,GACNC,QAAQ,CAACC,IAAI;AAEjB,OAAO,SAASC,gBAAgB,CAAEC,EAAE,EAAE;EACpC,MAAMC,EAAE,GAAGJ,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAExC,IAAIF,EAAE,KAAK,KAAK,CAAC,EAAE;IACjBC,EAAE,CAACD,EAAE,GAAGA,EAAE;EACZ;EAEA,IAAIP,YAAY,CAACC,WAAW,KAAK,KAAK,CAAC,EAAE;IACvC,MAAMS,GAAG,GAAGV,YAAY,CAACC,WAAW,CAACU,KAAK;IAC1C,IAAID,GAAG,KAAK,KAAK,CAAC,EAAE;MAClBF,EAAE,CAACI,SAAS,GAAGF,GAAG;IACpB;EACF;EAEAR,MAAM,CAACW,WAAW,CAACL,EAAE,CAAC;EACtBP,WAAW,CAACa,IAAI,CAACN,EAAE,CAAC;EAEpB,OAAOA,EAAE;AACX;AAEA,OAAO,SAASO,gBAAgB,CAAEP,EAAE,EAAE;EACpCP,WAAW,CAACe,MAAM,CAACf,WAAW,CAACgB,OAAO,CAACT,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9CA,EAAE,CAACU,MAAM,EAAE;AACb;AAEA,OAAO,SAASC,uBAAuB,CAAEX,EAAE,EAAE;EAC3C,IAAIA,EAAE,KAAKN,MAAM,EAAE;IACjBA,MAAM,GAAGM,EAAE;IAEXP,WAAW,CAACmB,OAAO,CAACZ,EAAE,IAAI;MACxB,IAAIA,EAAE,CAACa,QAAQ,CAACnB,MAAM,CAAC,KAAK,KAAK,EAAE;QACjCA,MAAM,CAACW,WAAW,CAACL,EAAE,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}