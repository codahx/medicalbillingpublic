{"ast":null,"code":"import { defineComponent, computed, ref, watch } from 'vue';\nimport { useAuth } from '../store/auth';\nimport { useRequest } from '../util';\nimport UserForm from '../components/UserForm.vue';\nimport Loader from '../components/ui/Loader.vue';\nexport default defineComponent({\n  name: 'Details',\n  components: {\n    UserForm,\n    Loader\n  },\n  setup() {\n    const {\n      idToken,\n      signout\n    } = useAuth();\n    const imageSrc = ref(null);\n    const {\n      data: meData,\n      error: meError,\n      loading: meLoading\n    } = useRequest({\n      url: '/api/account/me',\n      method: 'get',\n      headers: {\n        Authorization: `Bearer ${idToken.value}`\n      }\n    }, {\n      execOnMounted: true\n    });\n    const {\n      exec: postImage,\n      data: postImageData,\n      error: postImageError,\n      loading: postImageLoading\n    } = useRequest({\n      url: '/api/account/image',\n      method: 'post',\n      headers: {\n        Authorization: `Bearer ${idToken.value}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const {\n      exec: deleteImage,\n      data: deleteImageData,\n      error: deleteImageError,\n      loading: deleteImageLoading\n    } = useRequest({\n      url: '/api/account/image',\n      method: 'delete',\n      headers: {\n        Authorization: `Bearer ${idToken.value}`\n      }\n    });\n    const {\n      exec: updateDetails,\n      data: updateDetailsData,\n      error: updateDetailsError,\n      loading: updateDetailsLoading\n    } = useRequest({\n      url: '/api/account/details',\n      method: 'put',\n      headers: {\n        Authorization: `Bearer ${idToken.value}`\n      }\n    });\n    const handleDetailsSubmitted = userDetails => {\n      updateDetails(userDetails);\n    };\n    const handleImageSubmitted = async imageBlob => {\n      const formData = new FormData();\n      formData.append('imageFile', imageBlob);\n      postImage(formData);\n    };\n    watch(meData, newData => {\n      if (!newData) return;\n      if (!newData?.user?.imageUrl.length) {\n        // empty imageUrl comes as empty string from API\n        imageSrc.value = null;\n      } else {\n        imageSrc.value = newData.user.imageUrl + `?_${Date.now()}`;\n      }\n    });\n    watch(postImageData, newData => {\n      if (!newData) return;\n      imageSrc.value = newData?.imageUrl + `?_${Date.now()}`;\n    });\n    watch(deleteImageData, newData => {\n      if (!newData) return;\n      if (newData.message === 'success') {\n        imageSrc.value = null;\n      }\n    });\n    const loading = computed(() => {\n      return meLoading.value || postImageLoading.value || deleteImageLoading.value || updateDetailsLoading.value;\n    });\n    const user = computed(() => {\n      return updateDetailsData?.value?.user || meData?.value?.user;\n    });\n    return {\n      meData,\n      meError,\n      postImage,\n      postImageData,\n      postImageError,\n      handleImageSubmitted,\n      loading,\n      imageSrc,\n      deleteImage,\n      deleteImageError,\n      handleDetailsSubmitted,\n      updateDetailsError,\n      user,\n      signout\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","computed","ref","watch","useAuth","useRequest","UserForm","Loader","name","components","setup","idToken","signout","imageSrc","data","meData","error","meError","loading","meLoading","url","method","headers","Authorization","value","execOnMounted","exec","postImage","postImageData","postImageError","postImageLoading","deleteImage","deleteImageData","deleteImageError","deleteImageLoading","updateDetails","updateDetailsData","updateDetailsError","updateDetailsLoading","handleDetailsSubmitted","userDetails","handleImageSubmitted","imageBlob","formData","FormData","append","newData","user","imageUrl","length","Date","now","message"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\views\\Details.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"text-3xl text-center my-8\">User Account</h1>\r\n    <Loader\r\n      v-if=\"loading\"\r\n      :height=\"256\"\r\n      class=\"animate-spin stroke-current text-blue-500 mx-auto\"\r\n    />\r\n    <div v-else class=\"mb-4\">\r\n      <div\r\n        v-if=\"!imageSrc\"\r\n        class=\"bg-gray-200 w-32 h-32 rounded-full mx-auto\"\r\n      ></div>\r\n      <img\r\n        v-else\r\n        :src=\"imageSrc\"\r\n        class=\"w-32 h-32 rounded-full mx-auto\"\r\n        alt=\"User profile image\"\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-red w-32 block mx-auto my-2\"\r\n        @click=\"deleteImage\"\r\n      >\r\n        Delete\r\n      </button>\r\n      <UserForm\r\n        v-if=\"user\"\r\n        :user=\"user\"\r\n        @imageSubmitted=\"handleImageSubmitted\"\r\n        @detailsSubmitted=\"handleDetailsSubmitted\"\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-red w-32 block mx-auto my-2\"\r\n        @click=\"signout\"\r\n      >\r\n        Signout\r\n      </button>\r\n      <p v-if=\"meError\" class=\"text-center text-red-500\">Error fetching user</p>\r\n      <p v-if=\"postImageError\" class=\"text-center text-red-500\">\r\n        Failed to update image\r\n      </p>\r\n      <p v-if=\"deleteImageError\" class=\"text-center text-red-500\">\r\n        Failed to delete image\r\n      </p>\r\n      <p v-if=\"updateDetailsError\" class=\"text-center text-red-500\">\r\n        Failed to update user details\r\n      </p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent, computed, ref, watch } from 'vue';\r\n  import { useAuth } from '../store/auth';\r\n  import { useRequest } from '../util';\r\n  import UserForm from '../components/UserForm.vue';\r\n  import Loader from '../components/ui/Loader.vue';\r\n  export default defineComponent({\r\n    name: 'Details',\r\n    components: {\r\n      UserForm,\r\n      Loader,\r\n    },\r\n    setup() {\r\n      const { idToken, signout } = useAuth();\r\n      const imageSrc = ref(null);\r\n      const { data: meData, error: meError, loading: meLoading } = useRequest(\r\n        {\r\n          url: '/api/account/me',\r\n          method: 'get',\r\n          headers: {\r\n            Authorization: `Bearer ${idToken.value}`,\r\n          },\r\n        },\r\n        {\r\n          execOnMounted: true,\r\n        }\r\n      );\r\n      const {\r\n        exec: postImage,\r\n        data: postImageData,\r\n        error: postImageError,\r\n        loading: postImageLoading,\r\n      } = useRequest({\r\n        url: '/api/account/image',\r\n        method: 'post',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      const {\r\n        exec: deleteImage,\r\n        data: deleteImageData,\r\n        error: deleteImageError,\r\n        loading: deleteImageLoading,\r\n      } = useRequest({\r\n        url: '/api/account/image',\r\n        method: 'delete',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n        },\r\n      });\r\n      const {\r\n        exec: updateDetails,\r\n        data: updateDetailsData,\r\n        error: updateDetailsError,\r\n        loading: updateDetailsLoading,\r\n      } = useRequest({\r\n        url: '/api/account/details',\r\n        method: 'put',\r\n        headers: {\r\n          Authorization: `Bearer ${idToken.value}`,\r\n        },\r\n      });\r\n      const handleDetailsSubmitted = (userDetails) => {\r\n        updateDetails(userDetails);\r\n      };\r\n      const handleImageSubmitted = async (imageBlob) => {\r\n        const formData = new FormData();\r\n        formData.append('imageFile', imageBlob);\r\n        postImage(formData);\r\n      };\r\n      watch(meData, (newData) => {\r\n        if (!newData) return;\r\n        if (!newData?.user?.imageUrl.length) {\r\n          // empty imageUrl comes as empty string from API\r\n          imageSrc.value = null;\r\n        } else {\r\n          imageSrc.value = newData.user.imageUrl + `?_${Date.now()}`;\r\n        }\r\n      });\r\n      watch(postImageData, (newData) => {\r\n        if (!newData) return;\r\n        imageSrc.value = newData?.imageUrl + `?_${Date.now()}`;\r\n      });\r\n      watch(deleteImageData, (newData) => {\r\n        if (!newData) return;\r\n        if (newData.message === 'success') {\r\n          imageSrc.value = null;\r\n        }\r\n      });\r\n      const loading = computed(() => {\r\n        return (\r\n          meLoading.value ||\r\n          postImageLoading.value ||\r\n          deleteImageLoading.value ||\r\n          updateDetailsLoading.value\r\n        );\r\n      });\r\n      const user = computed(() => {\r\n        return updateDetailsData?.value?.user || meData?.value?.user;\r\n      });\r\n      return {\r\n        meData,\r\n        meError,\r\n        postImage,\r\n        postImageData,\r\n        postImageError,\r\n        handleImageSubmitted,\r\n        loading,\r\n        imageSrc,\r\n        deleteImage,\r\n        deleteImageError,\r\n        handleDetailsSubmitted,\r\n        updateDetailsError,\r\n        user,\r\n        signout,\r\n      };\r\n    },\r\n  });\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}