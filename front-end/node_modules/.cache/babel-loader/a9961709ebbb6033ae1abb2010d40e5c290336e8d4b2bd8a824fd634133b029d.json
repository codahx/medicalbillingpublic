{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createTextVNode(\" For a guide and recipes on how to configure / customize this project,\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" check out the \"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://cli.vuejs.org\",\n  target: \"_blank\",\n  rel: \"noopener\"\n}, \"vue-cli documentation\"), /*#__PURE__*/_createTextVNode(\". \")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Installed CLI Plugins\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.msg), 1 /* TEXT */), _hoisted_2, _hoisted_3]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAO;gEAEhBC,oBAII,0CAJD,wEACoE,oCAAI,sDAEzE,oCAAwF;EAArFC,IAAI,EAAC,uBAAuB;EAACC,MAAM,EAAC,QAAQ;EAACC,GAAG,EAAC;GAAW,uBAAqB,iCAAI,IAC1F;gEACAH,oBAA8B,YAA1B,uBAAqB;;;uBAP3BI,oBAQM,OARNC,UAQM,GAPJL,oBAAkB,6BAAXM,UAAG,kBACVC,UAII,EACJC,UAA8B","names":["class","_createElementVNode","href","target","rel","_createElementBlock","_hoisted_1","$props","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <p>\n      For a guide and recipes on how to configure / customize this project,<br>\n      check out the\n      <a href=\"https://cli.vuejs.org\" target=\"_blank\" rel=\"noopener\">vue-cli documentation</a>.\n    </p>\n    <h3>Installed CLI Plugins</h3>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    addfile(event) {\n      this.file = event.target.files[0];\n      let fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(this.file);\n      fileReader.onload = (e) => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for (var i = 0; i != data.length; ++i)\n          arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join('');\n        var workbook = XLSX.read(bstr, { type: 'binary' });\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n        //console.log(XLSX.utils.sheet_to_json(worksheet, { raw: true }));\n        this.excel_data = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        console.log(this.excel_data);\n        var arraylist = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        this.filelist = [];\n        console.log(this.filelist);\n        this.mrns = [];\n        for (var i = 0; i < this.excel_data.length; i++)\n          this.mrns.push(Object.values(this.excel_data[i]));\n        console.log(this.mrns);\n        this.mrns = this.mrns.reduce(\n          (previousValue, currentValue) => previousValue.concat(currentValue),\n          []\n        );\n        this.test_patient = this.mrns[3];\n      };\n    },\n  },\n}\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}