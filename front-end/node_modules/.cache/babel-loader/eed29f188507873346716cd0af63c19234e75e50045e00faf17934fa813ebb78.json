{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"my-2 w-64 h-64 object-fill mx-auto\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"flex justify-center content-end mt-2\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"my-2 align-baseline text-center\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Selected File: \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    class: \"block max-w-full\",\n    ref: \"img\",\n    src: _ctx.imageSrc\n  }, null, 8 /* PROPS */, _hoisted_2)], 512 /* NEED_PATCH */), [[_vShow, _ctx.imageSrc]]), _createElementVNode(\"div\", _hoisted_3, [!_ctx.imageSrc ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn btn-blue w-32 mx-2\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.imageInput.click())\n  }, \" New Image \")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"btn btn-blue w-32 mx-2\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleImageCropped && _ctx.handleImageCropped(...args))\n  }, \" Update \")), _ctx.imageSrc ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    button: \"\",\n    class: \"btn btn-gray w-32 mx-2\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.fileCleared && _ctx.fileCleared(...args))\n  }, \" Cancel \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"imageInput\",\n    accept: \".jpg,.jpeg,.png\",\n    onChange: _cache[3] || (_cache[3] = (...args) => _ctx.fileChanged && _ctx.fileChanged(...args)),\n    style: {\n      display: 'none'\n    }\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)]), _ctx.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"span\", null, _toDisplayString(_ctx.selectedFile.name), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACwBA,KAAK,EAAC;AAAoC;;;EAG5DA,KAAK,EAAC;AAAsC;;;EAwBxBA,KAAK,EAAC;;gCAC9BC,oBAA4B,cAAtB,iBAAe;;;6EA5BtBA,oBAEM,OAFNC,UAEM,GADLD,oBAA0D;IAArDD,KAAK,EAAC,kBAAkB;IAACG,GAAG,EAAC,KAAK;IAAEC,GAAG,EAAEC;yEADlCA,aAAQ,KAGrBJ,oBAuBM,OAvBNK,UAuBM,IArBGD,aAAQ,kBADhBE,oBAKS;;IAHRP,KAAK,EAAC,wBAAwB;IAC7BQ,OAAK,sCAAEH,eAAU,CAACI,KAAK;KAAI,aAE7B,oBACAF,oBAES;;IAFMP,KAAK,EAAC,wBAAwB;IAAEQ,OAAK,yCAAEH,2DAAkB;KAAE,UAE1E,IAGOA,aAAQ,kBAFfE,oBAMS;;IALRG,MAAM,EAAN,EAAM;IAENV,KAAK,EAAC,wBAAwB;IAC7BQ,OAAK,yCAAEH,6CAAW;KAAE,UAEtB,wCACAJ,oBAKgC;IAJ/BU,IAAI,EAAC,MAAM;IACXR,GAAG,EAAC,YAAY;IAChBS,MAAM,EAAC,iBAAiB;IACvBC,QAAM,yCAAER,6CAAW;IACnBS,KAAK,EAAE;MAAAC;IAAA;oDAECV,iBAAY,kBAAvBE,oBAGM,OAHNS,UAGM,GAFLC,UAA4B,EAC5BhB,oBAAoC,+BAA3BI,iBAAY,CAACa,IAAI","names":["class","_createElementVNode","_hoisted_1","ref","src","_ctx","_hoisted_3","_createElementBlock","onClick","click","button","type","accept","onChange","style","display","_hoisted_4","_hoisted_5","name"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\Medical Billing\\front-end\\src\\components\\ui\\ImageCropper.vue"],"sourcesContent":["<template>\r\n\t<div v-show=\"imageSrc\" class=\"my-2 w-64 h-64 object-fill mx-auto\">\r\n\t\t<img class=\"block max-w-full\" ref=\"img\" :src=\"imageSrc\" />\r\n\t</div>\r\n\t<div class=\"flex justify-center content-end mt-2\">\r\n\t\t<button\r\n\t\t\tv-if=\"!imageSrc\"\r\n\t\t\tclass=\"btn btn-blue w-32 mx-2\"\r\n\t\t\t@click=\"imageInput.click()\">\r\n\t\t\tNew Image\r\n\t\t</button>\r\n\t\t<button v-else class=\"btn btn-blue w-32 mx-2\" @click=\"handleImageCropped\">\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button\r\n\t\t\tbutton\r\n\t\t\tv-if=\"imageSrc\"\r\n\t\t\tclass=\"btn btn-gray w-32 mx-2\"\r\n\t\t\t@click=\"fileCleared\">\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t\t<input\r\n\t\t\ttype=\"file\"\r\n\t\t\tref=\"imageInput\"\r\n\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t@change=\"fileChanged\"\r\n\t\t\t:style=\"{ display: 'none' }\" />\r\n\t</div>\r\n\t<div v-if=\"selectedFile\" class=\"my-2 align-baseline text-center\">\r\n\t\t<span>Selected File: </span>\r\n\t\t<span>{{ selectedFile.name }}</span>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tdefineComponent,\r\n\t\tref,\r\n\t\twatchEffect,\r\n\t\tonMounted,\r\n\t\tonUnmounted,\r\n\t\twatch,\r\n\t} from 'vue';\r\n\timport Cropper from 'cropperjs';\r\n\texport default defineComponent({\r\n\t\tname: 'ImageCropper',\r\n\t\temits: ['imageCropped'],\r\n\t\tsetup(_props, { emit }) {\r\n\t\t\tconst imageInput = ref(null); // template ref for file input\r\n\t\t\tconst selectedFile = ref(null);\r\n\t\t\tconst imageSrc = ref(null);\r\n\t\t\tconst img = ref(null);\r\n\t\t\tconst fileReader = new FileReader();\r\n\t\t\tlet cropper = null;\r\n\t\t\tfileReader.onload = (event) => {\r\n\t\t\t\timageSrc.value = event.target.result;\r\n\t\t\t};\r\n\t\t\tconst handleImageCropped = () => {\r\n\t\t\t\tcropper\r\n\t\t\t\t\t.getCroppedCanvas({\r\n\t\t\t\t\t\twidth: 256,\r\n\t\t\t\t\t\theight: 256,\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toBlob((blob) => {\r\n\t\t\t\t\t\tconsole.log(blob);\r\n\t\t\t\t\t\temit('imageCropped', blob);\r\n\t\t\t\t\t}, 'image/jpeg');\r\n\t\t\t\tselectedFile.value = null;\r\n\t\t\t};\r\n\t\t\tconst fileChanged = (e) => {\r\n\t\t\t\tconst files = e.target.files || e.dataTransfer.files;\r\n\t\t\t\tif (files.length) {\r\n\t\t\t\t\tselectedFile.value = files[0];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tconst fileCleared = (_) => {\r\n\t\t\t\tselectedFile.value = null;\r\n\t\t\t};\r\n\t\t\tonMounted(() => {\r\n\t\t\t\tcropper = new Cropper(img.value, {\r\n\t\t\t\t\taspectRatio: 1,\r\n\t\t\t\t\tminCropBoxWidth: 256,\r\n\t\t\t\t\tminCropBoxHeight: 256,\r\n\t\t\t\t\tviewMode: 3,\r\n\t\t\t\t\tdragMode: 'move',\r\n\t\t\t\t\tbackground: false,\r\n\t\t\t\t\tcropBoxMovable: false,\r\n\t\t\t\t\tcropBoxResizable: false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tonUnmounted(() => {\r\n\t\t\t\tcropper.destroy();\r\n\t\t\t});\r\n\t\t\twatchEffect(() => {\r\n\t\t\t\tif (selectedFile.value) {\r\n\t\t\t\t\tfileReader.readAsDataURL(selectedFile.value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\timageSrc.value = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twatch(\r\n\t\t\t\timageSrc,\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (imageSrc.value) {\r\n\t\t\t\t\t\tcropper.replace(imageSrc.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tflush: 'post', // watch runs after component updates\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\timageInput,\r\n\t\t\t\tselectedFile,\r\n\t\t\t\tfileChanged,\r\n\t\t\t\tfileCleared,\r\n\t\t\t\timageSrc,\r\n\t\t\t\timg,\r\n\t\t\t\thandleImageCropped,\r\n\t\t\t};\r\n\t\t},\r\n\t});\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}