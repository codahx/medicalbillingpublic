{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      code: '',\n      accesstoken: '',\n      patient: '',\n      patientdata: {},\n      clientId: '2a8767b8-2c3c-474a-8ffa-00e4d2f93308',\n      // Replace with your client id\n      redirect: 'http://localhost:3000'\n    };\n  },\n  computed: {\n    authorizeLink() {\n      return `https://fhir.epic.com/interconnect-fhir-oauth/oauth2/authorize?response_type=code&redirect_uri=${this.redirect}&client_id=${this.clientId}&state=1234&scope=patient.read, patient.search`;\n    }\n  },\n  async mounted() {\n    console.log(this.$route.query.code);\n    this.code = this.$route.query.code;\n    if (this.code != undefined) {\n      const params = new URLSearchParams();\n      params.append('grant_type', 'authorization_code');\n      params.append('redirect_uri', this.redirect);\n      params.append('code', this.code);\n      params.append('client_id', this.clientId);\n      params.append('state', '1234');\n      const config = {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      await axios.post('https://fhir.epic.com/interconnect-fhir-oauth/oauth2/token', params, config).then(response => {\n        console.log(response.data);\n        this.accesstoken = response.data.access_token;\n        this.patient = response.data.patient;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n    if (this.accesstoken != '') {\n      await axios.get(`https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4/Patient/${this.patient}`, {\n        headers: {\n          Authorization: `Bearer ${this.accesstoken}`\n        }\n      }).then(response => {\n        this.patientdata = response.data;\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};\n// const state = reactive({ count: 0 })","map":{"version":3,"mappings":"AA+DC,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACdC,IAAI,GAAG;IACN,OAAO;MACNC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,CAAC,CAAC;MACfC,QAAQ,EAAE,sCAAsC;MAAE;MAClDC,QAAQ,EAAE;IACX,CAAC;EACF,CAAC;EACDC,QAAQ,EAAE;IACTC,aAAa,GAAG;MACf,OAAQ,kGAAiG,IAAI,CAACF,QAAS,cAAa,IAAI,CAACD,QAAS,gDAA+C;IAClM;EACD,CAAC;EACD,MAAMI,OAAO,GAAG;IACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACZ,IAAI,CAAC;IACnC,IAAI,CAACA,IAAG,GAAI,IAAI,CAACW,MAAM,CAACC,KAAK,CAACZ,IAAI;IAClC,IAAI,IAAI,CAACA,IAAG,IAAKa,SAAS,EAAE;MAC3B,MAAMC,MAAK,GAAI,IAAIC,eAAe,EAAE;MACpCD,MAAM,CAACE,MAAM,CAAC,YAAY,EAAE,oBAAoB,CAAC;MACjDF,MAAM,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACX,QAAQ,CAAC;MAC5CS,MAAM,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAChB,IAAI,CAAC;MAChCc,MAAM,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACZ,QAAQ,CAAC;MACzCU,MAAM,CAACE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;MAC9B,MAAMC,MAAK,GAAI;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB;MACD,CAAC;MACD,MAAMpB,KAAI,CACRqB,IAAI,CACJ,4DAA4D,EAC5DL,MAAM,EACNG,MAAK,CACN,CACCG,IAAI,CAAEC,QAAQ,IAAK;QACnBZ,OAAO,CAACC,GAAG,CAACW,QAAQ,CAACtB,IAAI,CAAC;QAC1B,IAAI,CAACE,WAAU,GAAIoB,QAAQ,CAACtB,IAAI,CAACuB,YAAY;QAC7C,IAAI,CAACpB,OAAM,GAAImB,QAAQ,CAACtB,IAAI,CAACG,OAAO;MACrC,CAAC,EACAqB,KAAK,CAAC,UAAUC,KAAK,EAAE;QACvBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MACnB,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAACvB,WAAU,IAAK,EAAE,EAAE;MAC3B,MAAMH,KAAI,CACR2B,GAAG,CACF,qEAAoE,IAAI,CAACvB,OAAQ,EAAC,EACnF;QAAEgB,OAAO,EAAE;UAAEQ,aAAa,EAAG,UAAS,IAAI,CAACzB,WAAY;QAAE;MAAE,EAC5D,CACCmB,IAAI,CAAEC,QAAQ,IAAK;QACnB,IAAI,CAAClB,WAAU,GAAIkB,QAAQ,CAACtB,IAAI;QAChCU,OAAO,CAACC,GAAG,CAACW,QAAQ,CAAC;MACtB,CAAC,EACAE,KAAK,CAAEC,KAAK,IAAK;QACjBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MACnB,CAAC,CAAC;IACJ;EACD;AACD,CAAC;AACD","names":["axios","data","code","accesstoken","patient","patientdata","clientId","redirect","computed","authorizeLink","mounted","console","log","$route","query","undefined","params","URLSearchParams","append","config","headers","post","then","response","access_token","catch","error","get","Authorization"],"sourceRoot":"","sources":["C:\\Users\\raamb\\Desktop\\MedicalBilling\\front-end\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n\t<!-- <h1>{{ msg }}</h1> -->\n\t<div class=\"container\">\n\t\t<div style=\"text-align: center\">\n\t\t\t<h3>CodaHx Medical Billing App</h3>\n\t\t\t<p><strong>Username:</strong> fhircamila</p>\n\t\t\t<p><strong>Password:</strong> epicepic1</p>\n\t\t\t<a\n\t\t\t\tclass=\"btn btn-info\"\n\t\t\t\tv-if=\"code == undefined\"\n\t\t\t\tstyle=\"text-decoration: none\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\t:href=\"authorizeLink\">\n\t\t\t\tSign in\n\t\t\t</a>\n\t\t\t<hr />\n\t\t</div>\n\t\t<div v-if=\"accesstoken\">\n\t\t\t<p><strong>Patient Id:</strong> {{ patient }}</p>\n\n\t\t\t<strong>Name: </strong>{{ patientdata.name[0].text }}<br />\n\t\t\t<strong>Birth Date: </strong>{{ patientdata.birthDate }} <br />\n\t\t\t<strong>Gender: </strong>{{ patientdata.gender }} <br />\n\t\t\t<strong>Vital Status: </strong\n\t\t\t>{{ patientdata.deceasedBoolean ? 'Dead' : 'Alive' }} <br />\n\t\t\t<strong>Marital Status: </strong>{{ patientdata.maritalStatus.text }}\n\t\t\t<br />\n\t\t\t<strong>Telecom: </strong> <br />\n\t\t\t<div v-for=\"telecom in patientdata.telecom\" :key=\"telecom.value\">\n\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t<strong>{{ telecom.system }}</strong> -\n\t\t\t\t\t{{ telecom.use }}\n\t\t\t\t\t{{ telecom.value }}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<strong>Address: </strong> <br />\n\t\t\t<div v-for=\"address in patientdata.address\" :key=\"address.use\">\n\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t<strong>{{ address.use }} -</strong>\n\t\t\t\t\t{{ address.line.toString() }}, {{ address.city }},\n\t\t\t\t\t{{ address.district }}, {{ address.state }}, {{ address.postalCode }},\n\t\t\t\t\t{{ address.country }}\n\t\t\t\t\t<span v-if=\"address.period?.start\"><strong>From</strong></span>\n\t\t\t\t\t{{ address.period?.start }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<strong>Language: </strong\n\t\t\t>{{ patientdata.communication[0].language.coding[0].display }} <br />\n\t\t\t<strong>General Practitioner </strong\n\t\t\t>{{ patientdata.generalPractitioner[0].display }}<br />\n\t\t\t<strong>Managing Organization </strong\n\t\t\t>{{ patientdata.managingOrganization.display }}<br />\n\t\t\t<hr />\n\t\t\t<strong>Access code:</strong>\n\t\t\t<p class=\"ml-2\" style=\"word-break: break-all\">{{ accesstoken }}</p>\n\t\t\t<strong>Patient Resource:</strong>\n\t\t\t<pre>{{ patientdata }}</pre>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport axios from 'axios';\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcode: '',\n\t\t\t\taccesstoken: '',\n\t\t\t\tpatient: '',\n\t\t\t\tpatientdata: {},\n\t\t\t\tclientId: '2a8767b8-2c3c-474a-8ffa-00e4d2f93308', // Replace with your client id\n\t\t\t\tredirect: 'http://localhost:3000',\n\t\t\t};\n\t\t},\n\t\tcomputed: {\n\t\t\tauthorizeLink() {\n\t\t\t\treturn `https://fhir.epic.com/interconnect-fhir-oauth/oauth2/authorize?response_type=code&redirect_uri=${this.redirect}&client_id=${this.clientId}&state=1234&scope=patient.read, patient.search`;\n\t\t\t},\n\t\t},\n\t\tasync mounted() {\n\t\t\tconsole.log(this.$route.query.code);\n\t\t\tthis.code = this.$route.query.code;\n\t\t\tif (this.code != undefined) {\n\t\t\t\tconst params = new URLSearchParams();\n\t\t\t\tparams.append('grant_type', 'authorization_code');\n\t\t\t\tparams.append('redirect_uri', this.redirect);\n\t\t\t\tparams.append('code', this.code);\n\t\t\t\tparams.append('client_id', this.clientId);\n\t\t\t\tparams.append('state', '1234');\n\t\t\t\tconst config = {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tawait axios\n\t\t\t\t\t.post(\n\t\t\t\t\t\t'https://fhir.epic.com/interconnect-fhir-oauth/oauth2/token',\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tconfig\n\t\t\t\t\t)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\tthis.accesstoken = response.data.access_token;\n\t\t\t\t\t\tthis.patient = response.data.patient;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tif (this.accesstoken != '') {\n\t\t\t\tawait axios\n\t\t\t\t\t.get(\n\t\t\t\t\t\t`https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4/Patient/${this.patient}`,\n\t\t\t\t\t\t{ headers: { Authorization: `Bearer ${this.accesstoken}` } }\n\t\t\t\t\t)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.patientdata = response.data;\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\t// const state = reactive({ count: 0 })\n</script>\n\n<style scoped>\n\t/* a {\n  color: #42b983;\n} */\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}