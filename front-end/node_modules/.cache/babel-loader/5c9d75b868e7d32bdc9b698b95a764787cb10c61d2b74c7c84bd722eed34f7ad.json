{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, isRef, computed, watch, provide, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport QBtn from '../btn/QBtn.js';\nimport QIcon from '../icon/QIcon.js';\nimport QSpinner from '../spinner/QSpinner.js';\nimport QCircularProgress from '../circular-progress/QCircularProgress.js';\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js';\nimport useFile, { useFileProps, useFileEmits } from '../../composables/private/use-file.js';\nimport { stop } from '../../utils/event.js';\nimport { humanStorageSize } from '../../utils/format.js';\nimport { uploaderKey } from '../../utils/private/symbols.js';\nimport { injectProp, injectMultipleProps } from '../../utils/private/inject-obj-prop.js';\nimport { vmIsDestroyed } from '../../utils/private/vm.js';\nfunction getProgressLabel(p) {\n  return (p * 100).toFixed(2) + '%';\n}\nexport const coreProps = {\n  ...useDarkProps,\n  ...useFileProps,\n  label: String,\n  color: String,\n  textColor: String,\n  square: Boolean,\n  flat: Boolean,\n  bordered: Boolean,\n  noThumbnails: Boolean,\n  autoUpload: Boolean,\n  hideUploadBtn: Boolean,\n  disable: Boolean,\n  readonly: Boolean\n};\nexport const coreEmits = [...useFileEmits, 'start', 'finish', 'added', 'removed'];\nexport function getRenderer(getPlugin) {\n  const vm = getCurrentInstance();\n  const {\n    props,\n    slots,\n    emit,\n    proxy\n  } = vm;\n  const {\n    $q\n  } = proxy;\n  const isDark = useDark(props, $q);\n  function updateFileStatus(file, status, uploadedSize) {\n    file.__status = status;\n    if (status === 'idle') {\n      file.__uploaded = 0;\n      file.__progress = 0;\n      file.__sizeLabel = humanStorageSize(file.size);\n      file.__progressLabel = '0.00%';\n      return;\n    }\n    if (status === 'failed') {\n      proxy.$forceUpdate();\n      return;\n    }\n    file.__uploaded = status === 'uploaded' ? file.size : uploadedSize;\n    file.__progress = status === 'uploaded' ? 1 : Math.min(0.9999, file.__uploaded / file.size);\n    file.__progressLabel = getProgressLabel(file.__progress);\n    proxy.$forceUpdate();\n  }\n  const editable = computed(() => props.disable !== true && props.readonly !== true);\n  const dnd = ref(false);\n  const rootRef = ref(null);\n  const inputRef = ref(null);\n  const state = {\n    files: ref([]),\n    queuedFiles: ref([]),\n    uploadedFiles: ref([]),\n    uploadedSize: ref(0),\n    updateFileStatus,\n    isAlive: () => vmIsDestroyed(vm) === false\n  };\n  const {\n    pickFiles,\n    addFiles,\n    onDragover,\n    onDragleave,\n    processFiles,\n    getDndNode,\n    maxFilesNumber,\n    maxTotalSizeNumber\n  } = useFile({\n    editable,\n    dnd,\n    getFileInput,\n    addFilesToQueue\n  });\n  Object.assign(state, getPlugin({\n    props,\n    slots,\n    emit,\n    helpers: state\n  }));\n  if (state.isBusy === void 0) {\n    state.isBusy = ref(false);\n  }\n  const uploadSize = ref(0);\n  const uploadProgress = computed(() => uploadSize.value === 0 ? 0 : state.uploadedSize.value / uploadSize.value);\n  const uploadProgressLabel = computed(() => getProgressLabel(uploadProgress.value));\n  const uploadSizeLabel = computed(() => humanStorageSize(uploadSize.value));\n  const canAddFiles = computed(() => editable.value === true && state.isUploading.value !== true\n  // if single selection and no files are queued:\n  && (props.multiple === true || state.queuedFiles.value.length === 0)\n  // if max-files is set and current number of files does not exceeds it:\n  && (props.maxFiles === void 0 || state.files.value.length < maxFilesNumber.value)\n  // if max-total-size is set and current upload size does not exceeds it:\n  && (props.maxTotalSize === void 0 || uploadSize.value < maxTotalSizeNumber.value));\n  const canUpload = computed(() => editable.value === true && state.isBusy.value !== true && state.isUploading.value !== true && state.queuedFiles.value.length > 0);\n  provide(uploaderKey, renderInput);\n  const classes = computed(() => 'q-uploader column no-wrap' + (isDark.value === true ? ' q-uploader--dark q-dark' : '') + (props.bordered === true ? ' q-uploader--bordered' : '') + (props.square === true ? ' q-uploader--square no-border-radius' : '') + (props.flat === true ? ' q-uploader--flat no-shadow' : '') + (props.disable === true ? ' disabled q-uploader--disable' : '') + (dnd.value === true ? ' q-uploader--dnd' : ''));\n  const colorClass = computed(() => 'q-uploader__header' + (props.color !== void 0 ? ` bg-${props.color}` : '') + (props.textColor !== void 0 ? ` text-${props.textColor}` : ''));\n  watch(state.isUploading, (newVal, oldVal) => {\n    if (oldVal === false && newVal === true) {\n      emit('start');\n    } else if (oldVal === true && newVal === false) {\n      emit('finish');\n    }\n  });\n  function reset() {\n    if (props.disable === false) {\n      state.abort();\n      state.uploadedSize.value = 0;\n      uploadSize.value = 0;\n      revokeImgURLs();\n      state.files.value = [];\n      state.queuedFiles.value = [];\n      state.uploadedFiles.value = [];\n    }\n  }\n  function removeUploadedFiles() {\n    if (props.disable === false) {\n      batchRemoveFiles(['uploaded'], () => {\n        state.uploadedFiles.value = [];\n      });\n    }\n  }\n  function removeQueuedFiles() {\n    batchRemoveFiles(['idle', 'failed'], ({\n      size\n    }) => {\n      uploadSize.value -= size;\n      state.queuedFiles.value = [];\n    });\n  }\n  function batchRemoveFiles(statusList, cb) {\n    if (props.disable === true) {\n      return;\n    }\n    const removed = {\n      files: [],\n      size: 0\n    };\n    const localFiles = state.files.value.filter(f => {\n      if (statusList.indexOf(f.__status) === -1) {\n        return true;\n      }\n      removed.size += f.size;\n      removed.files.push(f);\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src);\n      return false;\n    });\n    if (removed.files.length > 0) {\n      state.files.value = localFiles;\n      cb(removed);\n      emit('removed', removed.files);\n    }\n  }\n  function removeFile(file) {\n    if (props.disable) {\n      return;\n    }\n    if (file.__status === 'uploaded') {\n      state.uploadedFiles.value = state.uploadedFiles.value.filter(f => f.__key !== file.__key);\n    } else if (file.__status === 'uploading') {\n      file.__abort();\n    } else {\n      uploadSize.value -= file.size;\n    }\n    state.files.value = state.files.value.filter(f => {\n      if (f.__key !== file.__key) {\n        return true;\n      }\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src);\n      return false;\n    });\n    state.queuedFiles.value = state.queuedFiles.value.filter(f => f.__key !== file.__key);\n    emit('removed', [file]);\n  }\n  function revokeImgURLs() {\n    state.files.value.forEach(f => {\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src);\n    });\n  }\n  function getFileInput() {\n    return inputRef.value || rootRef.value.getElementsByClassName('q-uploader__input')[0];\n  }\n  function addFilesToQueue(e, fileList) {\n    const localFiles = processFiles(e, fileList, state.files.value, true);\n    const fileInput = getFileInput();\n    if (fileInput !== void 0 && fileInput !== null) {\n      fileInput.value = '';\n    }\n    if (localFiles === void 0) {\n      return;\n    }\n    localFiles.forEach(file => {\n      state.updateFileStatus(file, 'idle');\n      uploadSize.value += file.size;\n      if (props.noThumbnails !== true && file.type.toUpperCase().startsWith('IMAGE')) {\n        const img = new Image();\n        img.src = window.URL.createObjectURL(file);\n        file.__img = img;\n      }\n    });\n    state.files.value = state.files.value.concat(localFiles);\n    state.queuedFiles.value = state.queuedFiles.value.concat(localFiles);\n    emit('added', localFiles);\n    props.autoUpload === true && state.upload();\n  }\n  function upload() {\n    canUpload.value === true && state.upload();\n  }\n  function getBtn(show, icon, fn) {\n    if (show === true) {\n      const data = {\n        type: 'a',\n        key: icon,\n        icon: $q.iconSet.uploader[icon],\n        flat: true,\n        dense: true\n      };\n      let child = void 0;\n      if (icon === 'add') {\n        data.onClick = pickFiles;\n        child = renderInput;\n      } else {\n        data.onClick = fn;\n      }\n      return h(QBtn, data, child);\n    }\n  }\n  function renderInput() {\n    return h('input', {\n      ref: inputRef,\n      class: 'q-uploader__input overflow-hidden absolute-full',\n      tabindex: -1,\n      type: 'file',\n      title: '',\n      // try to remove default tooltip\n      accept: props.accept,\n      multiple: props.multiple === true ? 'multiple' : void 0,\n      capture: props.capture,\n      onMousedown: stop,\n      // need to stop refocus from QBtn\n      onClick: pickFiles,\n      onChange: addFilesToQueue\n    });\n  }\n  function getHeader() {\n    if (slots.header !== void 0) {\n      return slots.header(publicApi);\n    }\n    return [h('div', {\n      class: 'q-uploader__header-content column'\n    }, [h('div', {\n      class: 'flex flex-center no-wrap q-gutter-xs'\n    }, [getBtn(state.queuedFiles.value.length > 0, 'removeQueue', removeQueuedFiles), getBtn(state.uploadedFiles.value.length > 0, 'removeUploaded', removeUploadedFiles), state.isUploading.value === true ? h(QSpinner, {\n      class: 'q-uploader__spinner'\n    }) : null, h('div', {\n      class: 'col column justify-center'\n    }, [props.label !== void 0 ? h('div', {\n      class: 'q-uploader__title'\n    }, [props.label]) : null, h('div', {\n      class: 'q-uploader__subtitle'\n    }, [uploadSizeLabel.value + ' / ' + uploadProgressLabel.value])]), getBtn(canAddFiles.value, 'add'), getBtn(props.hideUploadBtn === false && canUpload.value === true, 'upload', state.upload), getBtn(state.isUploading.value, 'clear', state.abort)])])];\n  }\n  function getList() {\n    if (slots.list !== void 0) {\n      return slots.list(publicApi);\n    }\n    return state.files.value.map(file => h('div', {\n      key: file.__key,\n      class: 'q-uploader__file relative-position' + (props.noThumbnails !== true && file.__img !== void 0 ? ' q-uploader__file--img' : '') + (file.__status === 'failed' ? ' q-uploader__file--failed' : file.__status === 'uploaded' ? ' q-uploader__file--uploaded' : ''),\n      style: props.noThumbnails !== true && file.__img !== void 0 ? {\n        backgroundImage: 'url(\"' + file.__img.src + '\")'\n      } : null\n    }, [h('div', {\n      class: 'q-uploader__file-header row flex-center no-wrap'\n    }, [file.__status === 'failed' ? h(QIcon, {\n      class: 'q-uploader__file-status',\n      name: $q.iconSet.type.negative,\n      color: 'negative'\n    }) : null, h('div', {\n      class: 'q-uploader__file-header-content col'\n    }, [h('div', {\n      class: 'q-uploader__title'\n    }, [file.name]), h('div', {\n      class: 'q-uploader__subtitle row items-center no-wrap'\n    }, [file.__sizeLabel + ' / ' + file.__progressLabel])]), file.__status === 'uploading' ? h(QCircularProgress, {\n      value: file.__progress,\n      min: 0,\n      max: 1,\n      indeterminate: file.__progress === 0\n    }) : h(QBtn, {\n      round: true,\n      dense: true,\n      flat: true,\n      icon: $q.iconSet.uploader[file.__status === 'uploaded' ? 'done' : 'clear'],\n      onClick: () => {\n        removeFile(file);\n      }\n    })])]));\n  }\n  onBeforeUnmount(() => {\n    state.isUploading.value === true && state.abort();\n    state.files.value.length > 0 && revokeImgURLs();\n  });\n  const publicApi = {};\n  for (const key in state) {\n    if (isRef(state[key]) === true) {\n      injectProp(publicApi, key, () => state[key].value);\n    } else {\n      // method or non-computed prop\n      publicApi[key] = state[key];\n    }\n  }\n  Object.assign(publicApi, {\n    upload,\n    reset,\n    removeUploadedFiles,\n    removeQueuedFiles,\n    removeFile,\n    pickFiles,\n    addFiles\n  });\n  injectMultipleProps(publicApi, {\n    canAddFiles: () => canAddFiles.value,\n    canUpload: () => canUpload.value,\n    uploadSizeLabel: () => uploadSizeLabel.value,\n    uploadProgressLabel: () => uploadProgressLabel.value\n  });\n\n  // expose public api (methods & computed props)\n  Object.assign(proxy, publicApi);\n  return () => {\n    const children = [h('div', {\n      class: colorClass.value\n    }, getHeader()), h('div', {\n      class: 'q-uploader__list scroll'\n    }, getList()), getDndNode('uploader')];\n    state.isBusy.value === true && children.push(h('div', {\n      class: 'q-uploader__overlay absolute-full flex flex-center'\n    }, [h(QSpinner)]));\n    const data = {\n      ref: rootRef,\n      class: classes.value\n    };\n    if (canAddFiles.value === true) {\n      Object.assign(data, {\n        onDragover,\n        onDragleave\n      });\n    }\n    return h('div', data, children);\n  };\n}","map":{"version":3,"names":["h","ref","isRef","computed","watch","provide","onBeforeUnmount","getCurrentInstance","QBtn","QIcon","QSpinner","QCircularProgress","useDark","useDarkProps","useFile","useFileProps","useFileEmits","stop","humanStorageSize","uploaderKey","injectProp","injectMultipleProps","vmIsDestroyed","getProgressLabel","p","toFixed","coreProps","label","String","color","textColor","square","Boolean","flat","bordered","noThumbnails","autoUpload","hideUploadBtn","disable","readonly","coreEmits","getRenderer","getPlugin","vm","props","slots","emit","proxy","$q","isDark","updateFileStatus","file","status","uploadedSize","__status","__uploaded","__progress","__sizeLabel","size","__progressLabel","$forceUpdate","Math","min","editable","dnd","rootRef","inputRef","state","files","queuedFiles","uploadedFiles","isAlive","pickFiles","addFiles","onDragover","onDragleave","processFiles","getDndNode","maxFilesNumber","maxTotalSizeNumber","getFileInput","addFilesToQueue","Object","assign","helpers","isBusy","uploadSize","uploadProgress","value","uploadProgressLabel","uploadSizeLabel","canAddFiles","isUploading","multiple","length","maxFiles","maxTotalSize","canUpload","renderInput","classes","colorClass","newVal","oldVal","reset","abort","revokeImgURLs","removeUploadedFiles","batchRemoveFiles","removeQueuedFiles","statusList","cb","removed","localFiles","filter","f","indexOf","push","__img","window","URL","revokeObjectURL","src","removeFile","__key","__abort","forEach","getElementsByClassName","e","fileList","fileInput","type","toUpperCase","startsWith","img","Image","createObjectURL","concat","upload","getBtn","show","icon","fn","data","key","iconSet","uploader","dense","child","onClick","class","tabindex","title","accept","capture","onMousedown","onChange","getHeader","header","publicApi","getList","list","map","style","backgroundImage","name","negative","max","indeterminate","round","children"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/components/uploader/uploader-core.js"],"sourcesContent":["import { h, ref, isRef, computed, watch, provide, onBeforeUnmount, getCurrentInstance } from 'vue'\r\n\r\nimport QBtn from '../btn/QBtn.js'\r\nimport QIcon from '../icon/QIcon.js'\r\nimport QSpinner from '../spinner/QSpinner.js'\r\nimport QCircularProgress from '../circular-progress/QCircularProgress.js'\r\n\r\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\r\nimport useFile, { useFileProps, useFileEmits } from '../../composables/private/use-file.js'\r\n\r\nimport { stop } from '../../utils/event.js'\r\nimport { humanStorageSize } from '../../utils/format.js'\r\nimport { uploaderKey } from '../../utils/private/symbols.js'\r\nimport { injectProp, injectMultipleProps } from '../../utils/private/inject-obj-prop.js'\r\nimport { vmIsDestroyed } from '../../utils/private/vm.js'\r\n\r\nfunction getProgressLabel (p) {\r\n  return (p * 100).toFixed(2) + '%'\r\n}\r\n\r\nexport const coreProps = {\r\n  ...useDarkProps,\r\n  ...useFileProps,\r\n\r\n  label: String,\r\n\r\n  color: String,\r\n  textColor: String,\r\n\r\n  square: Boolean,\r\n  flat: Boolean,\r\n  bordered: Boolean,\r\n\r\n  noThumbnails: Boolean,\r\n  autoUpload: Boolean,\r\n  hideUploadBtn: Boolean,\r\n\r\n  disable: Boolean,\r\n  readonly: Boolean\r\n}\r\n\r\nexport const coreEmits = [\r\n  ...useFileEmits,\r\n  'start', 'finish', 'added', 'removed'\r\n]\r\n\r\nexport function getRenderer (getPlugin) {\r\n  const vm = getCurrentInstance()\r\n  const { props, slots, emit, proxy } = vm\r\n  const { $q } = proxy\r\n\r\n  const isDark = useDark(props, $q)\r\n\r\n  function updateFileStatus (file, status, uploadedSize) {\r\n    file.__status = status\r\n\r\n    if (status === 'idle') {\r\n      file.__uploaded = 0\r\n      file.__progress = 0\r\n      file.__sizeLabel = humanStorageSize(file.size)\r\n      file.__progressLabel = '0.00%'\r\n      return\r\n    }\r\n    if (status === 'failed') {\r\n      proxy.$forceUpdate()\r\n      return\r\n    }\r\n\r\n    file.__uploaded = status === 'uploaded'\r\n      ? file.size\r\n      : uploadedSize\r\n\r\n    file.__progress = status === 'uploaded'\r\n      ? 1\r\n      : Math.min(0.9999, file.__uploaded / file.size)\r\n\r\n    file.__progressLabel = getProgressLabel(file.__progress)\r\n    proxy.$forceUpdate()\r\n  }\r\n\r\n  const editable = computed(() => props.disable !== true && props.readonly !== true)\r\n  const dnd = ref(false)\r\n\r\n  const rootRef = ref(null)\r\n  const inputRef = ref(null)\r\n\r\n  const state = {\r\n    files: ref([]),\r\n    queuedFiles: ref([]),\r\n    uploadedFiles: ref([]),\r\n    uploadedSize: ref(0),\r\n\r\n    updateFileStatus,\r\n    isAlive: () => vmIsDestroyed(vm) === false\r\n  }\r\n\r\n  const {\r\n    pickFiles,\r\n    addFiles,\r\n    onDragover,\r\n    onDragleave,\r\n    processFiles,\r\n    getDndNode,\r\n    maxFilesNumber,\r\n    maxTotalSizeNumber\r\n  } = useFile({ editable, dnd, getFileInput, addFilesToQueue })\r\n\r\n  Object.assign(state, getPlugin({ props, slots, emit, helpers: state }))\r\n\r\n  if (state.isBusy === void 0) {\r\n    state.isBusy = ref(false)\r\n  }\r\n\r\n  const uploadSize = ref(0)\r\n  const uploadProgress = computed(() => (\r\n    uploadSize.value === 0\r\n      ? 0\r\n      : state.uploadedSize.value / uploadSize.value\r\n  ))\r\n  const uploadProgressLabel = computed(() => getProgressLabel(uploadProgress.value))\r\n  const uploadSizeLabel = computed(() => humanStorageSize(uploadSize.value))\r\n\r\n  const canAddFiles = computed(() =>\r\n    editable.value === true\r\n    && state.isUploading.value !== true\r\n    // if single selection and no files are queued:\r\n    && (props.multiple === true || state.queuedFiles.value.length === 0)\r\n    // if max-files is set and current number of files does not exceeds it:\r\n    && (props.maxFiles === void 0 || state.files.value.length < maxFilesNumber.value)\r\n    // if max-total-size is set and current upload size does not exceeds it:\r\n    && (props.maxTotalSize === void 0 || uploadSize.value < maxTotalSizeNumber.value)\r\n  )\r\n\r\n  const canUpload = computed(() =>\r\n    editable.value === true\r\n    && state.isBusy.value !== true\r\n    && state.isUploading.value !== true\r\n    && state.queuedFiles.value.length > 0\r\n  )\r\n\r\n  provide(uploaderKey, renderInput)\r\n\r\n  const classes = computed(() =>\r\n    'q-uploader column no-wrap'\r\n    + (isDark.value === true ? ' q-uploader--dark q-dark' : '')\r\n    + (props.bordered === true ? ' q-uploader--bordered' : '')\r\n    + (props.square === true ? ' q-uploader--square no-border-radius' : '')\r\n    + (props.flat === true ? ' q-uploader--flat no-shadow' : '')\r\n    + (props.disable === true ? ' disabled q-uploader--disable' : '')\r\n    + (dnd.value === true ? ' q-uploader--dnd' : '')\r\n  )\r\n\r\n  const colorClass = computed(() =>\r\n    'q-uploader__header'\r\n    + (props.color !== void 0 ? ` bg-${ props.color }` : '')\r\n    + (props.textColor !== void 0 ? ` text-${ props.textColor }` : '')\r\n  )\r\n\r\n  watch(state.isUploading, (newVal, oldVal) => {\r\n    if (oldVal === false && newVal === true) {\r\n      emit('start')\r\n    }\r\n    else if (oldVal === true && newVal === false) {\r\n      emit('finish')\r\n    }\r\n  })\r\n\r\n  function reset () {\r\n    if (props.disable === false) {\r\n      state.abort()\r\n      state.uploadedSize.value = 0\r\n      uploadSize.value = 0\r\n      revokeImgURLs()\r\n      state.files.value = []\r\n      state.queuedFiles.value = []\r\n      state.uploadedFiles.value = []\r\n    }\r\n  }\r\n\r\n  function removeUploadedFiles () {\r\n    if (props.disable === false) {\r\n      batchRemoveFiles([ 'uploaded' ], () => {\r\n        state.uploadedFiles.value = []\r\n      })\r\n    }\r\n  }\r\n\r\n  function removeQueuedFiles () {\r\n    batchRemoveFiles([ 'idle', 'failed' ], ({ size }) => {\r\n      uploadSize.value -= size\r\n      state.queuedFiles.value = []\r\n    })\r\n  }\r\n\r\n  function batchRemoveFiles (statusList, cb) {\r\n    if (props.disable === true) {\r\n      return\r\n    }\r\n\r\n    const removed = {\r\n      files: [],\r\n      size: 0\r\n    }\r\n\r\n    const localFiles = state.files.value.filter(f => {\r\n      if (statusList.indexOf(f.__status) === -1) {\r\n        return true\r\n      }\r\n\r\n      removed.size += f.size\r\n      removed.files.push(f)\r\n\r\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src)\r\n\r\n      return false\r\n    })\r\n\r\n    if (removed.files.length > 0) {\r\n      state.files.value = localFiles\r\n      cb(removed)\r\n      emit('removed', removed.files)\r\n    }\r\n  }\r\n\r\n  function removeFile (file) {\r\n    if (props.disable) { return }\r\n\r\n    if (file.__status === 'uploaded') {\r\n      state.uploadedFiles.value = state.uploadedFiles.value.filter(f => f.__key !== file.__key)\r\n    }\r\n    else if (file.__status === 'uploading') {\r\n      file.__abort()\r\n    }\r\n    else {\r\n      uploadSize.value -= file.size\r\n    }\r\n\r\n    state.files.value = state.files.value.filter(f => {\r\n      if (f.__key !== file.__key) {\r\n        return true\r\n      }\r\n\r\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src)\r\n\r\n      return false\r\n    })\r\n\r\n    state.queuedFiles.value = state.queuedFiles.value.filter(f => f.__key !== file.__key)\r\n    emit('removed', [ file ])\r\n  }\r\n\r\n  function revokeImgURLs () {\r\n    state.files.value.forEach(f => {\r\n      f.__img !== void 0 && window.URL.revokeObjectURL(f.__img.src)\r\n    })\r\n  }\r\n\r\n  function getFileInput () {\r\n    return inputRef.value\r\n      || rootRef.value.getElementsByClassName('q-uploader__input')[ 0 ]\r\n  }\r\n\r\n  function addFilesToQueue (e, fileList) {\r\n    const localFiles = processFiles(e, fileList, state.files.value, true)\r\n    const fileInput = getFileInput()\r\n\r\n    if (fileInput !== void 0 && fileInput !== null) {\r\n      fileInput.value = ''\r\n    }\r\n\r\n    if (localFiles === void 0) { return }\r\n\r\n    localFiles.forEach(file => {\r\n      state.updateFileStatus(file, 'idle')\r\n      uploadSize.value += file.size\r\n\r\n      if (props.noThumbnails !== true && file.type.toUpperCase().startsWith('IMAGE')) {\r\n        const img = new Image()\r\n        img.src = window.URL.createObjectURL(file)\r\n        file.__img = img\r\n      }\r\n    })\r\n\r\n    state.files.value = state.files.value.concat(localFiles)\r\n    state.queuedFiles.value = state.queuedFiles.value.concat(localFiles)\r\n    emit('added', localFiles)\r\n    props.autoUpload === true && state.upload()\r\n  }\r\n\r\n  function upload () {\r\n    canUpload.value === true && state.upload()\r\n  }\r\n\r\n  function getBtn (show, icon, fn) {\r\n    if (show === true) {\r\n      const data = {\r\n        type: 'a',\r\n        key: icon,\r\n        icon: $q.iconSet.uploader[ icon ],\r\n        flat: true,\r\n        dense: true\r\n      }\r\n\r\n      let child = void 0\r\n\r\n      if (icon === 'add') {\r\n        data.onClick = pickFiles\r\n        child = renderInput\r\n      }\r\n      else {\r\n        data.onClick = fn\r\n      }\r\n\r\n      return h(QBtn, data, child)\r\n    }\r\n  }\r\n\r\n  function renderInput () {\r\n    return h('input', {\r\n      ref: inputRef,\r\n      class: 'q-uploader__input overflow-hidden absolute-full',\r\n      tabindex: -1,\r\n      type: 'file',\r\n      title: '', // try to remove default tooltip\r\n      accept: props.accept,\r\n      multiple: props.multiple === true ? 'multiple' : void 0,\r\n      capture: props.capture,\r\n      onMousedown: stop, // need to stop refocus from QBtn\r\n      onClick: pickFiles,\r\n      onChange: addFilesToQueue\r\n    })\r\n  }\r\n\r\n  function getHeader () {\r\n    if (slots.header !== void 0) {\r\n      return slots.header(publicApi)\r\n    }\r\n\r\n    return [\r\n      h('div', {\r\n        class: 'q-uploader__header-content column'\r\n      }, [\r\n        h('div', {\r\n          class: 'flex flex-center no-wrap q-gutter-xs'\r\n        }, [\r\n          getBtn(state.queuedFiles.value.length > 0, 'removeQueue', removeQueuedFiles),\r\n          getBtn(state.uploadedFiles.value.length > 0, 'removeUploaded', removeUploadedFiles),\r\n\r\n          state.isUploading.value === true\r\n            ? h(QSpinner, { class: 'q-uploader__spinner' })\r\n            : null,\r\n\r\n          h('div', { class: 'col column justify-center' }, [\r\n            props.label !== void 0\r\n              ? h('div', { class: 'q-uploader__title' }, [ props.label ])\r\n              : null,\r\n\r\n            h('div', { class: 'q-uploader__subtitle' }, [\r\n              uploadSizeLabel.value + ' / ' + uploadProgressLabel.value\r\n            ])\r\n          ]),\r\n\r\n          getBtn(canAddFiles.value, 'add'),\r\n          getBtn(props.hideUploadBtn === false && canUpload.value === true, 'upload', state.upload),\r\n          getBtn(state.isUploading.value, 'clear', state.abort)\r\n        ])\r\n      ])\r\n    ]\r\n  }\r\n\r\n  function getList () {\r\n    if (slots.list !== void 0) {\r\n      return slots.list(publicApi)\r\n    }\r\n\r\n    return state.files.value.map(file => h('div', {\r\n      key: file.__key,\r\n      class: 'q-uploader__file relative-position'\r\n        + (props.noThumbnails !== true && file.__img !== void 0 ? ' q-uploader__file--img' : '')\r\n        + (\r\n          file.__status === 'failed'\r\n            ? ' q-uploader__file--failed'\r\n            : (file.__status === 'uploaded' ? ' q-uploader__file--uploaded' : '')\r\n        ),\r\n      style: props.noThumbnails !== true && file.__img !== void 0\r\n        ? { backgroundImage: 'url(\"' + file.__img.src + '\")' }\r\n        : null\r\n    }, [\r\n      h('div', {\r\n        class: 'q-uploader__file-header row flex-center no-wrap'\r\n      }, [\r\n        file.__status === 'failed'\r\n          ? h(QIcon, {\r\n            class: 'q-uploader__file-status',\r\n            name: $q.iconSet.type.negative,\r\n            color: 'negative'\r\n          })\r\n          : null,\r\n\r\n        h('div', { class: 'q-uploader__file-header-content col' }, [\r\n          h('div', { class: 'q-uploader__title' }, [ file.name ]),\r\n          h('div', {\r\n            class: 'q-uploader__subtitle row items-center no-wrap'\r\n          }, [\r\n            file.__sizeLabel + ' / ' + file.__progressLabel\r\n          ])\r\n        ]),\r\n\r\n        file.__status === 'uploading'\r\n          ? h(QCircularProgress, {\r\n            value: file.__progress,\r\n            min: 0,\r\n            max: 1,\r\n            indeterminate: file.__progress === 0\r\n          })\r\n          : h(QBtn, {\r\n            round: true,\r\n            dense: true,\r\n            flat: true,\r\n            icon: $q.iconSet.uploader[ file.__status === 'uploaded' ? 'done' : 'clear' ],\r\n            onClick: () => { removeFile(file) }\r\n          })\r\n      ])\r\n    ]))\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    state.isUploading.value === true && state.abort()\r\n    state.files.value.length > 0 && revokeImgURLs()\r\n  })\r\n\r\n  const publicApi = {}\r\n\r\n  for (const key in state) {\r\n    if (isRef(state[ key ]) === true) {\r\n      injectProp(publicApi, key, () => state[ key ].value)\r\n    }\r\n    else { // method or non-computed prop\r\n      publicApi[ key ] = state[ key ]\r\n    }\r\n  }\r\n\r\n  Object.assign(publicApi, {\r\n    upload,\r\n    reset,\r\n    removeUploadedFiles,\r\n    removeQueuedFiles,\r\n    removeFile,\r\n\r\n    pickFiles,\r\n    addFiles\r\n  })\r\n\r\n  injectMultipleProps(publicApi, {\r\n    canAddFiles: () => canAddFiles.value,\r\n    canUpload: () => canUpload.value,\r\n    uploadSizeLabel: () => uploadSizeLabel.value,\r\n    uploadProgressLabel: () => uploadProgressLabel.value\r\n  })\r\n\r\n  // expose public api (methods & computed props)\r\n  Object.assign(proxy, publicApi)\r\n\r\n  return () => {\r\n    const children = [\r\n      h('div', { class: colorClass.value }, getHeader()),\r\n      h('div', { class: 'q-uploader__list scroll' }, getList()),\r\n      getDndNode('uploader')\r\n    ]\r\n\r\n    state.isBusy.value === true && children.push(\r\n      h('div', {\r\n        class: 'q-uploader__overlay absolute-full flex flex-center'\r\n      }, [ h(QSpinner) ])\r\n    )\r\n\r\n    const data = { ref: rootRef, class: classes.value }\r\n\r\n    if (canAddFiles.value === true) {\r\n      Object.assign(data, { onDragover, onDragleave })\r\n    }\r\n\r\n    return h('div', data, children)\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}