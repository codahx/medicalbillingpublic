{"ast":null,"code":"import { h, onMounted, onBeforeUnmount, getCurrentInstance, nextTick } from 'vue';\nimport useCanRender from '../../composables/private/use-can-render.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { listenOpts, noop } from '../../utils/event.js';\nconst hasObserver = typeof ResizeObserver !== 'undefined';\nconst resizeProps = hasObserver === true ? {} : {\n  style: 'display:block;position:absolute;top:0;left:0;right:0;bottom:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;',\n  url: 'about:blank'\n};\nexport default createComponent({\n  name: 'QResizeObserver',\n  props: {\n    debounce: {\n      type: [String, Number],\n      default: 100\n    }\n  },\n  emits: ['resize'],\n  setup(props, {\n    emit\n  }) {\n    if (__QUASAR_SSR_SERVER__) {\n      return noop;\n    }\n    let timer = null,\n      targetEl,\n      size = {\n        width: -1,\n        height: -1\n      };\n    function trigger(immediately) {\n      if (immediately === true || props.debounce === 0 || props.debounce === '0') {\n        emitEvent();\n      } else if (timer === null) {\n        timer = setTimeout(emitEvent, props.debounce);\n      }\n    }\n    function emitEvent() {\n      clearTimeout(timer);\n      timer = null;\n      if (targetEl) {\n        const {\n          offsetWidth: width,\n          offsetHeight: height\n        } = targetEl;\n        if (width !== size.width || height !== size.height) {\n          size = {\n            width,\n            height\n          };\n          emit('resize', size);\n        }\n      }\n    }\n    const {\n      proxy\n    } = getCurrentInstance();\n    if (hasObserver === true) {\n      let observer;\n\n      // initialize as soon as possible\n      const init = stop => {\n        targetEl = proxy.$el.parentNode;\n        if (targetEl) {\n          observer = new ResizeObserver(trigger);\n          observer.observe(targetEl);\n          emitEvent();\n        } else if (stop !== true) {\n          nextTick(() => {\n            init(true);\n          });\n        }\n      };\n      onMounted(() => {\n        init();\n      });\n      onBeforeUnmount(() => {\n        clearTimeout(timer);\n        if (observer !== void 0) {\n          if (observer.disconnect !== void 0) {\n            observer.disconnect();\n          } else if (targetEl) {\n            // FF for Android\n            observer.unobserve(targetEl);\n          }\n        }\n      });\n      return noop;\n    } else {\n      // no observer, so fallback to old iframe method\n      const canRender = useCanRender();\n      let curDocView;\n      function cleanup() {\n        clearTimeout(timer);\n        if (curDocView !== void 0) {\n          // iOS is fuzzy, need to check it first\n          if (curDocView.removeEventListener !== void 0) {\n            curDocView.removeEventListener('resize', trigger, listenOpts.passive);\n          }\n          curDocView = void 0;\n        }\n      }\n      function onObjLoad() {\n        cleanup();\n        if (targetEl && targetEl.contentDocument) {\n          curDocView = targetEl.contentDocument.defaultView;\n          curDocView.addEventListener('resize', trigger, listenOpts.passive);\n          emitEvent();\n        }\n      }\n      onMounted(() => {\n        nextTick(() => {\n          targetEl = proxy.$el;\n          targetEl && onObjLoad();\n        });\n      });\n      onBeforeUnmount(cleanup);\n\n      // expose public method\n      proxy.trigger = trigger;\n      return () => {\n        if (canRender.value === true) {\n          return h('object', {\n            style: resizeProps.style,\n            tabindex: -1,\n            // fix for Firefox\n            type: 'text/html',\n            data: resizeProps.url,\n            'aria-hidden': 'true',\n            onLoad: onObjLoad\n          });\n        }\n      };\n    }\n  }\n});","map":{"version":3,"names":["h","onMounted","onBeforeUnmount","getCurrentInstance","nextTick","useCanRender","createComponent","listenOpts","noop","hasObserver","ResizeObserver","resizeProps","style","url","name","props","debounce","type","String","Number","default","emits","setup","emit","__QUASAR_SSR_SERVER__","timer","targetEl","size","width","height","trigger","immediately","emitEvent","setTimeout","clearTimeout","offsetWidth","offsetHeight","proxy","observer","init","stop","$el","parentNode","observe","disconnect","unobserve","canRender","curDocView","cleanup","removeEventListener","passive","onObjLoad","contentDocument","defaultView","addEventListener","value","tabindex","data","onLoad"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/components/resize-observer/QResizeObserver.js"],"sourcesContent":["import { h, onMounted, onBeforeUnmount, getCurrentInstance, nextTick } from 'vue'\r\n\r\nimport useCanRender from '../../composables/private/use-can-render.js'\r\n\r\nimport { createComponent } from '../../utils/private/create.js'\r\nimport { listenOpts, noop } from '../../utils/event.js'\r\n\r\nconst hasObserver = typeof ResizeObserver !== 'undefined'\r\nconst resizeProps = hasObserver === true\r\n  ? {}\r\n  : {\r\n      style: 'display:block;position:absolute;top:0;left:0;right:0;bottom:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;',\r\n      url: 'about:blank'\r\n    }\r\n\r\nexport default createComponent({\r\n  name: 'QResizeObserver',\r\n\r\n  props: {\r\n    debounce: {\r\n      type: [ String, Number ],\r\n      default: 100\r\n    }\r\n  },\r\n\r\n  emits: [ 'resize' ],\r\n\r\n  setup (props, { emit }) {\r\n    if (__QUASAR_SSR_SERVER__) { return noop }\r\n\r\n    let timer = null, targetEl, size = { width: -1, height: -1 }\r\n\r\n    function trigger (immediately) {\r\n      if (immediately === true || props.debounce === 0 || props.debounce === '0') {\r\n        emitEvent()\r\n      }\r\n      else if (timer === null) {\r\n        timer = setTimeout(emitEvent, props.debounce)\r\n      }\r\n    }\r\n\r\n    function emitEvent () {\r\n      clearTimeout(timer)\r\n      timer = null\r\n\r\n      if (targetEl) {\r\n        const { offsetWidth: width, offsetHeight: height } = targetEl\r\n\r\n        if (width !== size.width || height !== size.height) {\r\n          size = { width, height }\r\n          emit('resize', size)\r\n        }\r\n      }\r\n    }\r\n\r\n    const { proxy } = getCurrentInstance()\r\n\r\n    if (hasObserver === true) {\r\n      let observer\r\n\r\n      // initialize as soon as possible\r\n      const init = stop => {\r\n        targetEl = proxy.$el.parentNode\r\n\r\n        if (targetEl) {\r\n          observer = new ResizeObserver(trigger)\r\n          observer.observe(targetEl)\r\n          emitEvent()\r\n        }\r\n        else if (stop !== true) {\r\n          nextTick(() => { init(true) })\r\n        }\r\n      }\r\n\r\n      onMounted(() => { init() })\r\n\r\n      onBeforeUnmount(() => {\r\n        clearTimeout(timer)\r\n\r\n        if (observer !== void 0) {\r\n          if (observer.disconnect !== void 0) {\r\n            observer.disconnect()\r\n          }\r\n          else if (targetEl) { // FF for Android\r\n            observer.unobserve(targetEl)\r\n          }\r\n        }\r\n      })\r\n\r\n      return noop\r\n    }\r\n    else { // no observer, so fallback to old iframe method\r\n      const canRender = useCanRender()\r\n\r\n      let curDocView\r\n\r\n      function cleanup () {\r\n        clearTimeout(timer)\r\n\r\n        if (curDocView !== void 0) {\r\n          // iOS is fuzzy, need to check it first\r\n          if (curDocView.removeEventListener !== void 0) {\r\n            curDocView.removeEventListener('resize', trigger, listenOpts.passive)\r\n          }\r\n          curDocView = void 0\r\n        }\r\n      }\r\n\r\n      function onObjLoad () {\r\n        cleanup()\r\n\r\n        if (targetEl && targetEl.contentDocument) {\r\n          curDocView = targetEl.contentDocument.defaultView\r\n          curDocView.addEventListener('resize', trigger, listenOpts.passive)\r\n          emitEvent()\r\n        }\r\n      }\r\n\r\n      onMounted(() => {\r\n        nextTick(() => {\r\n          targetEl = proxy.$el\r\n          targetEl && onObjLoad()\r\n        })\r\n      })\r\n\r\n      onBeforeUnmount(cleanup)\r\n\r\n      // expose public method\r\n      proxy.trigger = trigger\r\n\r\n      return () => {\r\n        if (canRender.value === true) {\r\n          return h('object', {\r\n            style: resizeProps.style,\r\n            tabindex: -1, // fix for Firefox\r\n            type: 'text/html',\r\n            data: resizeProps.url,\r\n            'aria-hidden': 'true',\r\n            onLoad: onObjLoad\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}