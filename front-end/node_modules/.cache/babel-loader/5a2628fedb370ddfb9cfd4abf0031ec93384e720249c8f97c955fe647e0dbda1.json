{"ast":null,"code":"import { h, ref, reactive, computed, watch, provide, onUnmounted, getCurrentInstance } from 'vue';\nimport { isRuntimeSsrPreHydration } from '../../plugins/Platform.js';\nimport QScrollObserver from '../scroll-observer/QScrollObserver.js';\nimport QResizeObserver from '../resize-observer/QResizeObserver.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { getScrollbarWidth } from '../../utils/scroll.js';\nimport { hMergeSlot } from '../../utils/private/render.js';\nimport { layoutKey } from '../../utils/private/symbols.js';\nexport default createComponent({\n  name: 'QLayout',\n  props: {\n    container: Boolean,\n    view: {\n      type: String,\n      default: 'hhh lpr fff',\n      validator: v => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase())\n    },\n    onScroll: Function,\n    onScrollHeight: Function,\n    onResize: Function\n  },\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const {\n      proxy: {\n        $q\n      }\n    } = getCurrentInstance();\n    const rootRef = ref(null);\n\n    // page related\n    const height = ref($q.screen.height);\n    const width = ref(props.container === true ? 0 : $q.screen.width);\n    const scroll = ref({\n      position: 0,\n      direction: 'down',\n      inflectionPoint: 0\n    });\n\n    // container only prop\n    const containerHeight = ref(0);\n    const scrollbarWidth = ref(isRuntimeSsrPreHydration.value === true ? 0 : getScrollbarWidth());\n    const classes = computed(() => 'q-layout q-layout--' + (props.container === true ? 'containerized' : 'standard'));\n    const style = computed(() => props.container === false ? {\n      minHeight: $q.screen.height + 'px'\n    } : null);\n\n    // used by container only\n    const targetStyle = computed(() => scrollbarWidth.value !== 0 ? {\n      [$q.lang.rtl === true ? 'left' : 'right']: `${scrollbarWidth.value}px`\n    } : null);\n    const targetChildStyle = computed(() => scrollbarWidth.value !== 0 ? {\n      [$q.lang.rtl === true ? 'right' : 'left']: 0,\n      [$q.lang.rtl === true ? 'left' : 'right']: `-${scrollbarWidth.value}px`,\n      width: `calc(100% + ${scrollbarWidth.value}px)`\n    } : null);\n    function onPageScroll(data) {\n      if (props.container === true || document.qScrollPrevented !== true) {\n        const info = {\n          position: data.position.top,\n          direction: data.direction,\n          directionChanged: data.directionChanged,\n          inflectionPoint: data.inflectionPoint.top,\n          delta: data.delta.top\n        };\n        scroll.value = info;\n        props.onScroll !== void 0 && emit('scroll', info);\n      }\n    }\n    function onPageResize(data) {\n      const {\n        height: newHeight,\n        width: newWidth\n      } = data;\n      let resized = false;\n      if (height.value !== newHeight) {\n        resized = true;\n        height.value = newHeight;\n        props.onScrollHeight !== void 0 && emit('scrollHeight', newHeight);\n        updateScrollbarWidth();\n      }\n      if (width.value !== newWidth) {\n        resized = true;\n        width.value = newWidth;\n      }\n      if (resized === true && props.onResize !== void 0) {\n        emit('resize', data);\n      }\n    }\n    function onContainerResize({\n      height\n    }) {\n      if (containerHeight.value !== height) {\n        containerHeight.value = height;\n        updateScrollbarWidth();\n      }\n    }\n    function updateScrollbarWidth() {\n      if (props.container === true) {\n        const width = height.value > containerHeight.value ? getScrollbarWidth() : 0;\n        if (scrollbarWidth.value !== width) {\n          scrollbarWidth.value = width;\n        }\n      }\n    }\n    let timer;\n    const $layout = {\n      instances: {},\n      view: computed(() => props.view),\n      isContainer: computed(() => props.container),\n      rootRef,\n      height,\n      containerHeight,\n      scrollbarWidth,\n      totalWidth: computed(() => width.value + scrollbarWidth.value),\n      rows: computed(() => {\n        const rows = props.view.toLowerCase().split(' ');\n        return {\n          top: rows[0].split(''),\n          middle: rows[1].split(''),\n          bottom: rows[2].split('')\n        };\n      }),\n      header: reactive({\n        size: 0,\n        offset: 0,\n        space: false\n      }),\n      right: reactive({\n        size: 300,\n        offset: 0,\n        space: false\n      }),\n      footer: reactive({\n        size: 0,\n        offset: 0,\n        space: false\n      }),\n      left: reactive({\n        size: 300,\n        offset: 0,\n        space: false\n      }),\n      scroll,\n      animate() {\n        if (timer !== void 0) {\n          clearTimeout(timer);\n        } else {\n          document.body.classList.add('q-body--layout-animate');\n        }\n        timer = setTimeout(() => {\n          document.body.classList.remove('q-body--layout-animate');\n          timer = void 0;\n        }, 155);\n      },\n      update(part, prop, val) {\n        $layout[part][prop] = val;\n      }\n    };\n    provide(layoutKey, $layout);\n\n    // prevent scrollbar flicker while resizing window height\n    // if no page scrollbar is already present\n    if (__QUASAR_SSR_SERVER__ !== true && getScrollbarWidth() > 0) {\n      let timer = null;\n      const el = document.body;\n      function restoreScrollbar() {\n        timer = null;\n        el.classList.remove('hide-scrollbar');\n      }\n      function hideScrollbar() {\n        if (timer === null) {\n          // if it has no scrollbar then there's nothing to do\n\n          if (el.scrollHeight > $q.screen.height) {\n            return;\n          }\n          el.classList.add('hide-scrollbar');\n        } else {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(restoreScrollbar, 300);\n      }\n      function updateScrollEvent(action) {\n        if (timer !== null && action === 'remove') {\n          clearTimeout(timer);\n          restoreScrollbar();\n        }\n        window[`${action}EventListener`]('resize', hideScrollbar);\n      }\n      watch(() => props.container !== true ? 'add' : 'remove', updateScrollEvent);\n      props.container !== true && updateScrollEvent('add');\n      onUnmounted(() => {\n        updateScrollEvent('remove');\n      });\n    }\n    return () => {\n      const content = hMergeSlot(slots.default, [h(QScrollObserver, {\n        onScroll: onPageScroll\n      }), h(QResizeObserver, {\n        onResize: onPageResize\n      })]);\n      const layout = h('div', {\n        class: classes.value,\n        style: style.value,\n        ref: props.container === true ? void 0 : rootRef,\n        tabindex: -1\n      }, content);\n      if (props.container === true) {\n        return h('div', {\n          class: 'q-layout-container overflow-hidden',\n          ref: rootRef\n        }, [h(QResizeObserver, {\n          onResize: onContainerResize\n        }), h('div', {\n          class: 'absolute-full',\n          style: targetStyle.value\n        }, [h('div', {\n          class: 'scroll',\n          style: targetChildStyle.value\n        }, [layout])])]);\n      }\n      return layout;\n    };\n  }\n});","map":{"version":3,"names":["h","ref","reactive","computed","watch","provide","onUnmounted","getCurrentInstance","isRuntimeSsrPreHydration","QScrollObserver","QResizeObserver","createComponent","getScrollbarWidth","hMergeSlot","layoutKey","name","props","container","Boolean","view","type","String","default","validator","v","test","toLowerCase","onScroll","Function","onScrollHeight","onResize","setup","slots","emit","proxy","$q","rootRef","height","screen","width","scroll","position","direction","inflectionPoint","containerHeight","scrollbarWidth","value","classes","style","minHeight","targetStyle","lang","rtl","targetChildStyle","onPageScroll","data","document","qScrollPrevented","info","top","directionChanged","delta","onPageResize","newHeight","newWidth","resized","updateScrollbarWidth","onContainerResize","timer","$layout","instances","isContainer","totalWidth","rows","split","middle","bottom","header","size","offset","space","right","footer","left","animate","clearTimeout","body","classList","add","setTimeout","remove","update","part","prop","val","__QUASAR_SSR_SERVER__","el","restoreScrollbar","hideScrollbar","scrollHeight","updateScrollEvent","action","window","content","layout","class","tabindex"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/components/layout/QLayout.js"],"sourcesContent":["import { h, ref, reactive, computed, watch, provide, onUnmounted, getCurrentInstance } from 'vue'\r\n\r\nimport { isRuntimeSsrPreHydration } from '../../plugins/Platform.js'\r\n\r\nimport QScrollObserver from '../scroll-observer/QScrollObserver.js'\r\nimport QResizeObserver from '../resize-observer/QResizeObserver.js'\r\n\r\nimport { createComponent } from '../../utils/private/create.js'\r\nimport { getScrollbarWidth } from '../../utils/scroll.js'\r\nimport { hMergeSlot } from '../../utils/private/render.js'\r\nimport { layoutKey } from '../../utils/private/symbols.js'\r\n\r\nexport default createComponent({\r\n  name: 'QLayout',\r\n\r\n  props: {\r\n    container: Boolean,\r\n    view: {\r\n      type: String,\r\n      default: 'hhh lpr fff',\r\n      validator: v => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase())\r\n    },\r\n\r\n    onScroll: Function,\r\n    onScrollHeight: Function,\r\n    onResize: Function\r\n  },\r\n\r\n  setup (props, { slots, emit }) {\r\n    const { proxy: { $q } } = getCurrentInstance()\r\n\r\n    const rootRef = ref(null)\r\n\r\n    // page related\r\n    const height = ref($q.screen.height)\r\n    const width = ref(props.container === true ? 0 : $q.screen.width)\r\n    const scroll = ref({ position: 0, direction: 'down', inflectionPoint: 0 })\r\n\r\n    // container only prop\r\n    const containerHeight = ref(0)\r\n    const scrollbarWidth = ref(isRuntimeSsrPreHydration.value === true ? 0 : getScrollbarWidth())\r\n\r\n    const classes = computed(() =>\r\n      'q-layout q-layout--'\r\n      + (props.container === true ? 'containerized' : 'standard')\r\n    )\r\n\r\n    const style = computed(() => (\r\n      props.container === false\r\n        ? { minHeight: $q.screen.height + 'px' }\r\n        : null\r\n    ))\r\n\r\n    // used by container only\r\n    const targetStyle = computed(() => (\r\n      scrollbarWidth.value !== 0\r\n        ? { [ $q.lang.rtl === true ? 'left' : 'right' ]: `${ scrollbarWidth.value }px` }\r\n        : null\r\n    ))\r\n\r\n    const targetChildStyle = computed(() => (\r\n      scrollbarWidth.value !== 0\r\n        ? {\r\n            [ $q.lang.rtl === true ? 'right' : 'left' ]: 0,\r\n            [ $q.lang.rtl === true ? 'left' : 'right' ]: `-${ scrollbarWidth.value }px`,\r\n            width: `calc(100% + ${ scrollbarWidth.value }px)`\r\n          }\r\n        : null\r\n    ))\r\n\r\n    function onPageScroll (data) {\r\n      if (props.container === true || document.qScrollPrevented !== true) {\r\n        const info = {\r\n          position: data.position.top,\r\n          direction: data.direction,\r\n          directionChanged: data.directionChanged,\r\n          inflectionPoint: data.inflectionPoint.top,\r\n          delta: data.delta.top\r\n        }\r\n\r\n        scroll.value = info\r\n        props.onScroll !== void 0 && emit('scroll', info)\r\n      }\r\n    }\r\n\r\n    function onPageResize (data) {\r\n      const { height: newHeight, width: newWidth } = data\r\n      let resized = false\r\n\r\n      if (height.value !== newHeight) {\r\n        resized = true\r\n        height.value = newHeight\r\n        props.onScrollHeight !== void 0 && emit('scrollHeight', newHeight)\r\n        updateScrollbarWidth()\r\n      }\r\n      if (width.value !== newWidth) {\r\n        resized = true\r\n        width.value = newWidth\r\n      }\r\n\r\n      if (resized === true && props.onResize !== void 0) {\r\n        emit('resize', data)\r\n      }\r\n    }\r\n\r\n    function onContainerResize ({ height }) {\r\n      if (containerHeight.value !== height) {\r\n        containerHeight.value = height\r\n        updateScrollbarWidth()\r\n      }\r\n    }\r\n\r\n    function updateScrollbarWidth () {\r\n      if (props.container === true) {\r\n        const width = height.value > containerHeight.value\r\n          ? getScrollbarWidth()\r\n          : 0\r\n\r\n        if (scrollbarWidth.value !== width) {\r\n          scrollbarWidth.value = width\r\n        }\r\n      }\r\n    }\r\n\r\n    let timer\r\n\r\n    const $layout = {\r\n      instances: {},\r\n      view: computed(() => props.view),\r\n      isContainer: computed(() => props.container),\r\n\r\n      rootRef,\r\n\r\n      height,\r\n      containerHeight,\r\n      scrollbarWidth,\r\n      totalWidth: computed(() => width.value + scrollbarWidth.value),\r\n\r\n      rows: computed(() => {\r\n        const rows = props.view.toLowerCase().split(' ')\r\n        return {\r\n          top: rows[ 0 ].split(''),\r\n          middle: rows[ 1 ].split(''),\r\n          bottom: rows[ 2 ].split('')\r\n        }\r\n      }),\r\n\r\n      header: reactive({ size: 0, offset: 0, space: false }),\r\n      right: reactive({ size: 300, offset: 0, space: false }),\r\n      footer: reactive({ size: 0, offset: 0, space: false }),\r\n      left: reactive({ size: 300, offset: 0, space: false }),\r\n\r\n      scroll,\r\n\r\n      animate () {\r\n        if (timer !== void 0) {\r\n          clearTimeout(timer)\r\n        }\r\n        else {\r\n          document.body.classList.add('q-body--layout-animate')\r\n        }\r\n\r\n        timer = setTimeout(() => {\r\n          document.body.classList.remove('q-body--layout-animate')\r\n          timer = void 0\r\n        }, 155)\r\n      },\r\n\r\n      update (part, prop, val) {\r\n        $layout[ part ][ prop ] = val\r\n      }\r\n    }\r\n\r\n    provide(layoutKey, $layout)\r\n\r\n    // prevent scrollbar flicker while resizing window height\r\n    // if no page scrollbar is already present\r\n    if (__QUASAR_SSR_SERVER__ !== true && getScrollbarWidth() > 0) {\r\n      let timer = null\r\n      const el = document.body\r\n\r\n      function restoreScrollbar () {\r\n        timer = null\r\n        el.classList.remove('hide-scrollbar')\r\n      }\r\n\r\n      function hideScrollbar () {\r\n        if (timer === null) {\r\n          // if it has no scrollbar then there's nothing to do\r\n\r\n          if (el.scrollHeight > $q.screen.height) {\r\n            return\r\n          }\r\n\r\n          el.classList.add('hide-scrollbar')\r\n        }\r\n        else {\r\n          clearTimeout(timer)\r\n        }\r\n\r\n        timer = setTimeout(restoreScrollbar, 300)\r\n      }\r\n\r\n      function updateScrollEvent (action) {\r\n        if (timer !== null && action === 'remove') {\r\n          clearTimeout(timer)\r\n          restoreScrollbar()\r\n        }\r\n\r\n        window[ `${ action }EventListener` ]('resize', hideScrollbar)\r\n      }\r\n\r\n      watch(\r\n        () => (props.container !== true ? 'add' : 'remove'),\r\n        updateScrollEvent\r\n      )\r\n\r\n      props.container !== true && updateScrollEvent('add')\r\n\r\n      onUnmounted(() => {\r\n        updateScrollEvent('remove')\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      const content = hMergeSlot(slots.default, [\r\n        h(QScrollObserver, { onScroll: onPageScroll }),\r\n        h(QResizeObserver, { onResize: onPageResize })\r\n      ])\r\n\r\n      const layout = h('div', {\r\n        class: classes.value,\r\n        style: style.value,\r\n        ref: props.container === true ? void 0 : rootRef,\r\n        tabindex: -1\r\n      }, content)\r\n\r\n      if (props.container === true) {\r\n        return h('div', {\r\n          class: 'q-layout-container overflow-hidden',\r\n          ref: rootRef\r\n        }, [\r\n          h(QResizeObserver, { onResize: onContainerResize }),\r\n          h('div', {\r\n            class: 'absolute-full',\r\n            style: targetStyle.value\r\n          }, [\r\n            h('div', {\r\n              class: 'scroll',\r\n              style: targetChildStyle.value\r\n            }, [ layout ])\r\n          ])\r\n        ])\r\n      }\r\n\r\n      return layout\r\n    }\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}