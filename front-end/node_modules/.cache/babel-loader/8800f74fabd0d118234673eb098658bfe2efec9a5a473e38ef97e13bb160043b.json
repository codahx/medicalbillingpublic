{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, onUnmounted, Teleport } from 'vue';\nimport { noop } from '../../utils/event.js';\nimport { addFocusWaitFlag, removeFocusWaitFlag } from '../../utils/private/focus-manager.js';\nimport { createGlobalNode, removeGlobalNode } from '../../utils/private/global-nodes.js';\nimport { portalProxyList } from '../../utils/private/portal.js';\nimport { injectProp } from '../../utils/private/inject-obj-prop.js';\nfunction isOnGlobalDialog(vm) {\n  vm = vm.parent;\n  while (vm !== void 0 && vm !== null) {\n    if (vm.type.name === 'QGlobalDialog') {\n      return true;\n    }\n    if (vm.type.name === 'QDialog' || vm.type.name === 'QMenu') {\n      return false;\n    }\n    vm = vm.parent;\n  }\n  return false;\n}\n\n// Warning!\n// You MUST specify \"inheritAttrs: false\" in your component\n\nexport default function (vm, innerRef, renderPortalContent, checkGlobalDialog) {\n  // showing, including while in show/hide transition\n  const portalIsActive = ref(false);\n\n  // showing & not in any show/hide transition\n  const portalIsAccessible = ref(false);\n  if (__QUASAR_SSR_SERVER__) {\n    return {\n      portalIsActive,\n      portalIsAccessible,\n      showPortal: noop,\n      hidePortal: noop,\n      renderPortal: noop\n    };\n  }\n  let portalEl = null;\n  const focusObj = {};\n  const onGlobalDialog = checkGlobalDialog === true && isOnGlobalDialog(vm);\n  function showPortal(isReady) {\n    if (isReady === true) {\n      removeFocusWaitFlag(focusObj);\n      portalIsAccessible.value = true;\n      return;\n    }\n    portalIsAccessible.value = false;\n    if (portalIsActive.value === false) {\n      if (onGlobalDialog === false && portalEl === null) {\n        portalEl = createGlobalNode();\n      }\n      portalIsActive.value = true;\n\n      // register portal\n      portalProxyList.push(vm.proxy);\n      addFocusWaitFlag(focusObj);\n    }\n  }\n  function hidePortal(isReady) {\n    portalIsAccessible.value = false;\n    if (isReady !== true) {\n      return;\n    }\n    removeFocusWaitFlag(focusObj);\n    portalIsActive.value = false;\n\n    // unregister portal\n    const index = portalProxyList.indexOf(vm.proxy);\n    if (index !== -1) {\n      portalProxyList.splice(index, 1);\n    }\n    if (portalEl !== null) {\n      removeGlobalNode(portalEl);\n      portalEl = null;\n    }\n  }\n  onUnmounted(() => {\n    hidePortal(true);\n  });\n\n  // needed for portal vm detection\n  vm.proxy.__qPortal = true;\n\n  // public way of accessing the rendered content\n  injectProp(vm.proxy, 'contentEl', () => innerRef.value);\n  return {\n    showPortal,\n    hidePortal,\n    portalIsActive,\n    portalIsAccessible,\n    renderPortal: () => onGlobalDialog === true ? renderPortalContent() : portalIsActive.value === true ? [h(Teleport, {\n      to: portalEl\n    }, renderPortalContent())] : void 0\n  };\n}","map":{"version":3,"names":["h","ref","onUnmounted","Teleport","noop","addFocusWaitFlag","removeFocusWaitFlag","createGlobalNode","removeGlobalNode","portalProxyList","injectProp","isOnGlobalDialog","vm","parent","type","name","innerRef","renderPortalContent","checkGlobalDialog","portalIsActive","portalIsAccessible","__QUASAR_SSR_SERVER__","showPortal","hidePortal","renderPortal","portalEl","focusObj","onGlobalDialog","isReady","value","push","proxy","index","indexOf","splice","__qPortal","to"],"sources":["C:/Users/raamb/Desktop/MedicalBilling/front-end/node_modules/quasar/src/composables/private/use-portal.js"],"sourcesContent":["import { h, ref, onUnmounted, Teleport } from 'vue'\r\n\r\nimport { noop } from '../../utils/event.js'\r\nimport { addFocusWaitFlag, removeFocusWaitFlag } from '../../utils/private/focus-manager.js'\r\nimport { createGlobalNode, removeGlobalNode } from '../../utils/private/global-nodes.js'\r\nimport { portalProxyList } from '../../utils/private/portal.js'\r\nimport { injectProp } from '../../utils/private/inject-obj-prop.js'\r\n\r\nfunction isOnGlobalDialog (vm) {\r\n  vm = vm.parent\r\n\r\n  while (vm !== void 0 && vm !== null) {\r\n    if (vm.type.name === 'QGlobalDialog') {\r\n      return true\r\n    }\r\n    if (vm.type.name === 'QDialog' || vm.type.name === 'QMenu') {\r\n      return false\r\n    }\r\n\r\n    vm = vm.parent\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// Warning!\r\n// You MUST specify \"inheritAttrs: false\" in your component\r\n\r\nexport default function (vm, innerRef, renderPortalContent, checkGlobalDialog) {\r\n  // showing, including while in show/hide transition\r\n  const portalIsActive = ref(false)\r\n\r\n  // showing & not in any show/hide transition\r\n  const portalIsAccessible = ref(false)\r\n\r\n  if (__QUASAR_SSR_SERVER__) {\r\n    return {\r\n      portalIsActive,\r\n      portalIsAccessible,\r\n\r\n      showPortal: noop,\r\n      hidePortal: noop,\r\n      renderPortal: noop\r\n    }\r\n  }\r\n\r\n  let portalEl = null\r\n  const focusObj = {}\r\n  const onGlobalDialog = checkGlobalDialog === true && isOnGlobalDialog(vm)\r\n\r\n  function showPortal (isReady) {\r\n    if (isReady === true) {\r\n      removeFocusWaitFlag(focusObj)\r\n      portalIsAccessible.value = true\r\n      return\r\n    }\r\n\r\n    portalIsAccessible.value = false\r\n\r\n    if (portalIsActive.value === false) {\r\n      if (onGlobalDialog === false && portalEl === null) {\r\n        portalEl = createGlobalNode()\r\n      }\r\n\r\n      portalIsActive.value = true\r\n\r\n      // register portal\r\n      portalProxyList.push(vm.proxy)\r\n\r\n      addFocusWaitFlag(focusObj)\r\n    }\r\n  }\r\n\r\n  function hidePortal (isReady) {\r\n    portalIsAccessible.value = false\r\n\r\n    if (isReady !== true) { return }\r\n\r\n    removeFocusWaitFlag(focusObj)\r\n    portalIsActive.value = false\r\n\r\n    // unregister portal\r\n    const index = portalProxyList.indexOf(vm.proxy)\r\n    if (index !== -1) {\r\n      portalProxyList.splice(index, 1)\r\n    }\r\n\r\n    if (portalEl !== null) {\r\n      removeGlobalNode(portalEl)\r\n      portalEl = null\r\n    }\r\n  }\r\n\r\n  onUnmounted(() => { hidePortal(true) })\r\n\r\n  // needed for portal vm detection\r\n  vm.proxy.__qPortal = true\r\n\r\n  // public way of accessing the rendered content\r\n  injectProp(vm.proxy, 'contentEl', () => innerRef.value)\r\n\r\n  return {\r\n    showPortal,\r\n    hidePortal,\r\n\r\n    portalIsActive,\r\n    portalIsAccessible,\r\n\r\n    renderPortal: () => (\r\n      onGlobalDialog === true\r\n        ? renderPortalContent()\r\n        : (\r\n            portalIsActive.value === true\r\n              ? [ h(Teleport, { to: portalEl }, renderPortalContent()) ]\r\n              : void 0\r\n          )\r\n    )\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}